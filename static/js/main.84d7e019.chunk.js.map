{"version":3,"sources":["Static/3.jpg","Static/invictalogo.png","Static/ce.png","Static/1.png","Helpers/basics.js","router.js","Store/Blog/actionCreator.js","Configs/apiConfigs.js","Components/UserAuth/login.js","Styles/theme.js","Components/Header/index.js","Components/Apps/index.js","Components/Layout/try.js","Components/Tenants/tenants.js","Components/UserAuth/tenantLogin.js","Store/Login/actionCreator.js","Components/Tables/index.js","Store/Tenants/actionCreator.js","Store/Data/actionCreator.js","Components/Home/index.js","Components/UserAuth/blogLogin.js","Components/Shared/uploadAdapter.js","Components/Shared/TextEditor.js","Components/Blog/createNew.js","Components/Blog/blogList.js","Components/Blog/index.js","Components/Blog/catDetails.js","Components/Layout/index.js","App.js","serviceWorker.js","Store/Blog/reducer.js","Store/rootReducer.js","store.js","index.js","Static/4.png","Static/myAthinaLogo.png","Static/logo.png","Static/2.png","Static/preplogo.svg","Static/tv_logo.svg"],"names":["module","exports","jwt","require","generateJwtToken","obj","sign","PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","apps","results","getAppsList","url","apiConfig","dispatch","axios","get","then","response","data","type","payload","catch","error","categoryListDataNew","id","name","categories","categoryTitle","slug","resetCreateCategory","getCategoryList","blog","paramObj","app_id","postCategoryData","createCategory","categoryList","find","item","appId","post","blogListData","banner_img","Image2","categoryName","title","thumbnail_img","Image4","date_posted","duration","category","desc","category_slug","Image3","Image1","blogContent1","likes_count","author_name","author_img","keywords","content","meta_content","meta_title","meta_description","meta_keyword","meta_robot","meta_author","og_content","og_title","og_url","og_description","og_keyword","og_image","base_domain","product_domain","console","log","userAuth","loginUrl","tenantLoginUrl","getTables","fetchTablesList","fetchTableData","tenants","getTenants","getBlogListData","getBlogContent","Login","useState","displayProgress","setDisplayProgress","btnDisabled","setBtnDisabled","renderLogin","classes","useStyles","Grid","container","direction","justify","alignItems","className","spacing","Card","card","variant","CardContent","src","Logo","height","width","form","noValidate","onSubmit","evnt","preventDefault","autoComplete","style","margin","color","fontSize","Button","disabled","button","onClick","event","history","replace","doSignIn","CircularProgress","progressIcon","size","makeStyles","paddingTop","orText","fontWeight","backgroundColor","paddingLeft","paddingRight","display","divider","marginTop","buttonGoogle","backgroundSize","paddingBottom","backgroundRepeat","border","textTransform","maxWidth","textAlign","flexGrow","alreadyAccount","buttonWrapper","formControll","marginBottom","cardFrame","containerPaddingTop","logoImg","cursor","root","iconFrame","justifyContent","iconContainer","icon","padding","faIcon","certIcon","certIconSmall","completedIcon","iconTxt","courseMainBanner","maxHeight","fontColour","_blue","_grey","_green","_darkBlue","_orange","_red","_white","_adminBlue","_tory_blue","_card","_screen","_screenLight","_heading","_sideHeading","_labels","_description","_smallDesc","_helperText","iconSize","_small","_medium","_large","_backgroundColor","_color","fontFamily","_appFont","Header","matches","useMediaQuery","AppBar","appBar","xs","sm","marginRight","alt","sectionDesktop","Fragment","Avatar","IconButton","aria-label","md","lg","theme","transition","transitions","create","easing","sharp","leavingScreen","float","menuButton","hide","avatar","popover","pointerEvents","paper","list","iconButton","buttonContainer","link","textDecoration","marginLeft","AppList","useEffect","removeItem","proceedToLogin","selProduct","setItem","push","window","location","reload","appsContainer","blogCard","CardHeader","blogcardTitle","CELogo","CardActions","blogButton","cardTitle","AthinaLogo","PrepLogo","TVlogo","InvictaLogo","media","createData","calories","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","label","EnhancedTableHead","order","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","map","headCell","TableCell","key","align","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","palette","secondary","main","lighten","light","text","primary","dark","flex","table","minWidth","clip","overflow","position","top","EnhancedTable","React","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","labelId","hover","selectedIndex","indexOf","newSelected","concat","handleClick","role","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","Tenants","selectedTenantId","setSelectedTenantId","FormControl","formControl","InputLabel","Select","onChange","MenuItem","tenant_id","selectEmpty","TenantLogin","setRenderLogin","productImage","setProductImage","tenantsList","setTenantsList","openSnack","setOpenSnack","snackBarMsg","setSnackBarMsg","paramVal","URLSearchParams","search","undefined","myAthinaLogo","prepLogo","tvLogo","invictaLogo","userName","document","getElementById","password","test","String","toLowerCase","loginCredentials","username","successCallBack","failureCallBack","doTenantLogin","res","userToken","userDetails","token","tenantInfo","fullWidth","htmlFor","Input","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","reason","message","Tables","tablesList","setTablesList","tableData","setTableData","columnsList","setColumnsList","setOffset","totalRecCount","setTotalRecCount","tableCode","setTableCode","displayImage","setDisplayImage","setOpen","selectedItem","setSelectedItem","searchValue","setSearchValue","product","setProduct","loading","setLoading","filters","setFilters","filterItems","setFilterItems","selectedFilterItem","setSelectedFilterItem","selectedColumn","sortType","handleClickSearch","match","params","tenantId","handleClose","handleChangePage","l","fetchTableList","getTenantList","header","headers","Authorization","fetchTenantList","successTenantsCallBack","failureTenantsCallBack","getTablesList","successCB","failureCB","code","offsetVal","sortBy","table_id","offset","filter","sorting","limit","getTableData","total_count","column_list","displayImgDialog","image","tableObj","table_name","OutlinedInput","endAdornment","InputAdornment","edge","labelWidth","Divider","e","handleFilterChange","sortLabel","values","menuIndex","thead","cell","col_type","href","col_name","downloadIcon","renderTableCell","Dialog","DialogTitle","DialogContent","DialogActions","background","activeTablesList","borderRight","Home","selComponent","setSelectedComponent","List","ListItem","ListItemIcon","ListItemText","UploadAdapter","loader","this","file","FormData","append","method","onUploadProgress","progressEvent","uploadTotal","total","uploaded","loaded","round","default","Promise","reject","Transition","forwardRef","ref","Slide","tooltipCntr","tooltip","iconWrapper","TextEditor","helperText","openDialog","setOpenDialog","description","defaultData","setDefaultData","previewDialog","setPreviewDialog","handleDialogClose","closeTextEditorView","textEditor","editor","DecoupledEditor","onInit","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","plugins","createUploadAdapter","uploadAdapterPlugin","onChangeData","getData","config","placeholder","fontColor","colors","hasBorder","fontBackgroundColor","fullScreen","TransitionComponent","Toolbar","Typography","previewDesc","dangerouslySetInnerHTML","__html","detailsWrapper","uploadBtn","uploadCtr","addBtn","chip","chipCtr","uploadFileName","connect","state","appsList","lists","setCategory","setTitle","setUrlSlug","setDuration","setThumbnailImg","thumbnailFileName","setThumbnailFileName","setAuthorImg","authorFileName","setAuthorFileName","setAuthor","keywordTxt","setKeywordTxt","setKeywords","app","setApp","setOgImg","ogFileName","setOgFileName","metaContent","setMetaContent","OGContent","setOGContent","category_id","categoryId","blog_id","blogId","onFileToUploadClick","imgType","click","handleMetaContentChange","field","handleOGContentChange","elevation","app_name","TextField","startIcon","accept","capture","files","reader","FileReader","onloadend","result","readAsDataURL","arr","addKeyword","Chip","onDelete","chipToDelete","categoryCtr","catName","editIconCtr","editIcon","icnBtn","borderRadius","date","lineHeight","itemDesc","infoCtr","itemDate","btn","catButton","imgTxt","bottom","cardActions","leftPaper","catTitle","selCatName","appsAPIStatus","categoryAPIStatus","postCategoryAPIStatus","bindActionCreators","blogList","catList","setCatList","setCatName","catSelApp","setCatSelApp","selectedCatTitle","setSelectedCatTitle","setSelectedCat","dialogOpen","setDialogOpen","appName","setAppName","catEditFlag","setCatEditFlag","createCatLoading","setCreateCatLoading","editBlogContent","handleCategoryChange","categoryObj","handleDialogOpen","listRoot","handleCatSelection","ListItemSecondaryAction","Tooltip","CardActionArea","CardMedia","cardContent","substring","disableSpacing","renderBlogCard","handleCreateCategory","Blogs","uploadImg","uploadTxt","CategoryDetails","xm","Layout","basename","exact","path","BlogLogin","BlogCreate","CatDetails","Blog","Try","App","createBrowserHistory","Boolean","hostname","initState","persistConfig","storage","whitellist","rootReducer","combineReducers","action","persistReducer","middlewares","logger","thunk","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84d7e019.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/3.c0039b5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/invictalogo.5d8001ad.png\";","module.exports = __webpack_public_path__ + \"static/media/ce.9bcdc1bd.png\";","module.exports = __webpack_public_path__ + \"static/media/1.6b4972ad.png\";","const jwt = require(\"jsonwebtoken\");\n\n\nconst prep_domain = 'https://api.prep.continualengine.com/'\nconst tv_domain = 'https://api.tablevision.ai/'\nconst myathina_domain = 'https://api.myathina.com/'\n\nexport const parseIDToken = (idToken) => {\n    const parsedIDToken = parseJwt(idToken);\n    let displayName = parsedIDToken.email.split(\"@\")[0];\n    if (parsedIDToken.firstName) {\n        displayName = parsedIDToken.firstName;\n    }\n    if (parsedIDToken.given_name) {\n        displayName = parsedIDToken.given_name;\n        displayName = parsedIDToken.family_name\n            ? `${displayName} ${parsedIDToken.family_name}`\n            : displayName;\n    }\n    return {\n        isSignedIn: true,\n        userName: parsedIDToken.email,\n        email: parsedIDToken.email,\n        displayName: displayName,\n        firstName: parsedIDToken.given_name\n            ? parsedIDToken.given_name\n            : parsedIDToken.firstName,\n        lastName: parsedIDToken.family_name\n            ? parsedIDToken.family_name\n            : parsedIDToken.lastName,\n        ref: parsedIDToken.ref,\n    };\n};\n\n\nexport const getLoggedInStatus = () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport const getBlogLoggedInStatus = () => {\n    const token = localStorage.getItem('blog_token');\n    if (token) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\n\n\nexport const getProductSelectionStatus = () => {\n    const product = localStorage.getItem('product');\n    if (product) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport const getProductDomain = () => {\n    let product_domain = '';\n    const product = localStorage.getItem('product');\n    console.log(\"Product\", product)\n\n    switch (product) {\n        case 'PREP':\n            console.log(\"Inside Prep\")\n            product_domain = prep_domain;\n            break;\n        case 'MyAthina':\n            console.log(\"Inside MA\")\n            product_domain = myathina_domain;\n            break;\n        case 'TableVision':\n            console.log(\"Inside TV\")\n            product_domain = tv_domain;\n            break;\n        default:\n            console.log(\"Inside Def\")\n            product_domain = ''\n    }\n    console.log(\"rpo\", product_domain)\n    return product_domain;\n}\n\n\nexport function parseJwt(token) {\n    var base64Url = token.split(\".\")[1];\n    var base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    var jsonPayload = decodeURIComponent(\n        atob(base64)\n            .split(\"\")\n            .map(function (c) {\n                return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join(\"\")\n    );\n\n    return JSON.parse(jsonPayload);\n}\n\nexport const getEnv = () => {\n    switch (window.location.origin) {\n        case \"http://localhost:3000\":\n            return \"dev\";\n        default:\n            return \"dev\";\n    }\n};\n\nexport const bytesToSize = (bytes) => {\n    var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    if (bytes === 0) return \"0 Byte\";\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + \" \" + sizes[i];\n};\n\nexport const openInNewTab = (url = \"/\") => {\n    const win = window.open(url, \"_blank\");\n    win.focus();\n};\n\nexport const redirectTo = (url = \"/\", newTab) => {\n    if (newTab) {\n        openInNewTab(url);\n    } else {\n        window.location = url;\n    }\n};\n\nexport const generateJwtToken = (obj) => {\n    return jwt.sign(obj, \"shhhhh\");\n};\n","import React from 'react';\nimport {\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport { getBlogLoggedInStatus, getProductSelectionStatus } from '../src/Helpers/basics';\n\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        getProductSelectionStatus() === true\n            ? <Component {...props} />\n            : <Redirect to='/apps' />\n    )} />\n)\n\nexport const BlogPrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        getBlogLoggedInStatus() === true\n            ? <Component {...props} />\n            : <Redirect to='/apps' />\n    )} />\n)","import axios from 'axios';\nimport { apiConfig } from '../../Configs/apiConfigs';\nimport Image1 from '../../Static/1.png';\nimport Image2 from '../../Static/2.png';\nimport Image3 from '../../Static/3.jpg';\nimport Image4 from '../../Static/4.png';\n\nconst apps = {\n    results: [{\n        \"id\": 1,\n        \"app_name\": 'TableVision'\n    }, {\n        \"id\": 2,\n        \"app_name\": 'PREP'\n    }, {\n        \"id\": 3,\n        \"app_name\": 'MyAthina'\n    }\n    ]\n}\n\n\n\nexport const getAppsList = () => {\n    let url = apiConfig.apps.getAppsList;\n    return (dispatch) => {\n        return axios.get(url)\n            .then(response => {\n                return response.data\n            })\n            .then(data => {\n                dispatch({\n                    type: \"FETCH_APPS_LIST\",\n                    payload: apps.results\n                })\n            })\n            .catch(error => {\n                // throw (error);\n                dispatch({\n                    type: \"FETCH_APPS_LIST\",\n                    payload: apps.results\n                })\n            });\n    };\n}\n\nexport const categoryListDataNew = [{\n    id: 1,\n    name: \"TableVision\",\n    categories: [{\n        id: 1,\n        categoryTitle: 'Programming',\n        slug: 'programming'\n    }, {\n        id: 2,\n        categoryTitle: 'Leadership',\n        slug: 'leadership'\n    }]\n},\n{\n    id: 2,\n    name: \"PREP\",\n    categories: [{\n        id: 1,\n        categoryTitle: 'Programming',\n        slug: 'programming'\n    }, {\n        id: 2,\n        categoryTitle: 'Leadership',\n        slug: 'leadership'\n    }, {\n        id: 3,\n        categoryTitle: 'Marketing',\n        slug: 'marketing'\n    }, {\n        id: 4,\n        categoryTitle: 'General',\n        slug: 'general'\n    }, {\n        id: 5,\n        categoryTitle: 'Computer Science',\n        slug: 'computer-science'\n    }]\n},\n{\n    id: 3,\n    name: \"MyAthina\",\n    categories: [{\n        id: 1,\n        categoryTitle: 'Programming',\n        slug: 'programming'\n    }, {\n        id: 2,\n        categoryTitle: 'Leadership',\n        slug: 'leadership'\n    }, {\n        id: 3,\n        categoryTitle: 'Marketing',\n        slug: 'marketing'\n    }]\n}\n]\n\nexport const categoryListData = {\n    results: [{\n        id: 1,\n        categoryTitle: 'Programming',\n        slug: 'programming'\n    }, {\n        id: 2,\n        categoryTitle: 'Leadership',\n        slug: 'leadership'\n    }, {\n        id: 3,\n        categoryTitle: 'Marketing',\n        slug: 'marketing'\n    }, {\n        id: 4,\n        categoryTitle: 'General',\n        slug: 'general'\n    }, {\n        id: 5,\n        categoryTitle: 'Computer Science',\n        slug: 'computer-science'\n    }\n    ]\n}\n\nexport const resetCreateCategory = () => {\n    return (dispatch) => {\n        dispatch({\n            type: \"RESET_CREATE_CATEGORY\",\n            payload: ''\n        })\n    }\n}\n\nexport const getCategoryList = (payload) => {\n    let url = apiConfig.blog.getCategoryList;\n    let paramObj = {\n        app_id: payload\n    }\n    return (dispatch) => {\n        return axios.get(url, paramObj)\n            .then(response => {\n                return response.data\n            })\n            .then(data => {\n                dispatch({\n                    type: \"FETCH_CATEGORY_LIST\",\n                    payload: categoryListDataNew\n                })\n            })\n            .catch(error => {\n                dispatch({\n                    type: \"FETCH_CATEGORY_LIST\",\n                    payload: categoryListDataNew\n                })\n            });\n    };\n}\n\n\nexport const postCategoryData = (payload) => {\n\n    let url = apiConfig.blog.createCategory;\n    var categoryList = categoryListDataNew.find(item => item.id === payload.appId);\n    // console.log(\"console\", categoryList);\n    // categoryList.categories.push(payload);\n    // var categoryListIndex = categoryListDataNew.findIndex(item => item.id === payload.appId);\n    // if (categoryListIndex != undefined) {\n    //     categoryListDataNew[categoryListIndex].categories = [];\n    // }\n    // categoryListDataNew[categoryListIndex].categories = categoryList;\n    return (dispatch) => {\n        return axios.post(url, payload)\n            .then(response => {\n                return response.data\n            })\n            .then(data => {\n                dispatch({\n                    type: \"CREATE_CATEGORY_DATA\",\n                    payload: categoryList\n                })\n            })\n            .catch(error => {\n                dispatch({\n                    type: \"CREATE_CATEGORY_DATA\",\n                    payload: categoryList\n                })\n            });\n    };\n}\n\n\nexport const blogListData = {\n    id: 1,\n    banner_img: Image2,\n    categoryName: 'Programming',\n    results: [{\n        id: 1,\n        title: \"What is Lorem ?\",\n        slug: \"what-is-lorem\",\n        thumbnail_img: Image4,\n        date_posted: \"3 Days Ago\",\n        duration: \"3 min Read\",\n        category: \"Programming\",\n        desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting\"\n    }, {\n        id: 2,\n        title: \"What is Lorem Ipsumn1?\",\n        slug: \"what-is-lorem-ipsumn1\",\n        thumbnail_img: Image2,\n        date_posted: \"31 Jul\",\n        duration: \"5 min Read\",\n        category: \"Dev Ops\",\n        category_slug: 'dev-ops',\n        desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting\"\n    }, {\n        id: 3,\n        title: \"What is Lorem Ipsum and uses\",\n        slug: \"what-is-lorem-ipsum-and-uses\",\n        thumbnail_img: Image3,\n        date_posted: \"08 Jun\",\n        duration: \"2 min Read\",\n        category: \"Design\",\n        category_slug: 'design',\n        desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting\"\n    }, {\n        id: 4,\n        title: \"What is Lorem Ipsum?\",\n        slug: \"what-is-lorem-ipsum\",\n        thumbnail_img: Image1,\n        date_posted: \"03 Nov 18\",\n        duration: \"12 min Read\",\n        category: \"Development\",\n        category_slug: 'development',\n        desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting\"\n    }, {\n        id: 5,\n        title: \"What is Lorem Ipsum?\",\n        slug: \"what-is-lorem-ipsum\",\n        thumbnail_img: Image3,\n        date_posted: \"03 Nov 18\",\n        duration: \"12 min Read\",\n        category: \"Development\",\n        category_slug: 'development',\n        desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting\"\n    },\n    {\n        id: 6,\n        title: \"What is Lorem Ipsum?\",\n        slug: \"what-is-lorem-ipsum\",\n        thumbnail_img: Image4,\n        date_posted: \"03 Nov 18\",\n        duration: \"12 min Read\",\n        category: \"Development\",\n        category_slug: 'development',\n        desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting\"\n    },\n    {\n        id: 7,\n        title: \"What is Lorem Ipsum?\",\n        slug: \"what-is-lorem-ipsum\",\n        thumbnail_img: Image2,\n        date_posted: \"03 Nov 18\",\n        duration: \"12 min Read\",\n        category: \"Development\",\n        category_slug: 'development',\n        desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting\"\n    }]\n}\n\nexport const getBlogListData = (payload, successCB, failureCB) => {\n    let url = apiConfig.apps.getBlogListData;\n    let paramObj = {\n        app_id: payload.appId,\n        category_id: payload.categoryId\n    }\n    axios.get(url, paramObj).then((response) => {\n        successCB(response.data)\n    }).catch((error) => {\n        successCB(blogListData)\n        //failureCB(error)\n    })\n}\n\n\nexport const blogListData1 = {\n    id: 3,\n    banner_img: \"test url\",\n    banner_txt: \"Test Data\", // Max 200 Chars\n    sec_banner: [\n        {\n            id: 1,\n            banner_img: \"img url\",\n            banner_txt: \"sec banner text\"\n        },\n        {\n            id: 2,\n            banner_img: \"img url\",\n            banner_txt: \"sec banner text\"\n        }\n    ],\n    results: [{\n        id: 1,\n        title: \"Test1\",\n        slug: \"test-1\",\n        thumbnail_img: Image4,\n        date_posted: \"3 Days Ago\",\n        duration: \"3 min Read\",\n        category: \"Leadership\",\n        category_slug: 'leadership',\n        desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting\"\n    }, {\n        id: 2,\n        title: \"What is Lorem Ipsumn1?\",\n        slug: \"what-is-lorem-ipsumn1\",\n        thumbnail_img: Image2,\n        date_posted: \"31 Jul\",\n        duration: \"5 min Read\",\n        category: \"Leadership\",\n        category_slug: 'leadership',\n        desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting\"\n    }, {\n        id: 3,\n        title: \"What is Lorem Ipsum and uses\",\n        slug: \"what-is-lorem-ipsum-and-uses\",\n        thumbnail_img: Image3,\n        date_posted: \"08 Jun\",\n        duration: \"2 min Read\",\n        category: \"Leadership\",\n        category_slug: 'leadership',\n        desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting\"\n    }, {\n        id: 4,\n        title: \"What is Lorem Ipsum?\",\n        slug: \"what-is-lorem-ipsum\",\n        thumbnail_img: Image1,\n        date_posted: \"03 Nov 18\",\n        duration: \"12 min Read\",\n        category: \"Leadership\",\n        category_slug: 'leadership',\n        desc: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting\"\n    }]\n}\n\n\nexport const blogContent = {\n    id: 1,\n    title: \"What is Lorem ? Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n    thumbnail_img: Image4,\n    date_posted: \"3 Aug 2020\",\n    likes_count: 23,\n    duration: \"3 min Read\",\n    category: \"Programming\",\n    content: `<div><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting </p><br /><p> \n    Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n    Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it \n    to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting </p> <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. \n    It has survived not only five centuries, but also the leap into electronic typesetting </p><br /><p> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. \n    It has survived not only five centuries, but also the leap into electronic typesetting </p><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \n    when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting </p><br /><p> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and \n    scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting </p></div>`\n}\n\nexport const blogContent1 = {\n    id: 1,\n    title: \"What is Lorem ? Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n    thumbnail_img: Image4,\n    date_posted: \"3 Aug 2020\",\n    likes_count: 23,\n    duration: 3,\n    author_name: \"Deepika\",\n    author_img: Image4,\n    category: \"Programming\",\n    keywords: \"\",\n    content: `<div><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting </p><br /><p> \n    Lorem Ipsum is simply dummy text of the printing and typesetting industry. \n    Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it \n    to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting </p> <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. \n    It has survived not only five centuries, but also the leap into electronic typesetting </p><br /><p> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. \n    It has survived not only five centuries, but also the leap into electronic typesetting </p><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, \n    when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting </p><br /><p> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and \n    scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting </p></div>`,\n    meta_content: {\n        meta_title: 'test meta title',\n        meta_description: 'test meta desc',\n        meta_keyword: 'test meta keyword',\n        meta_robot: 'test',\n        meta_author: 'meta author',\n    },\n    og_content: {\n        og_title: 'og title',\n        og_url: 'od url',\n        og_description: 'og_description',\n        og_keyword: 'keywords',\n        og_image: 'og image'\n    }\n}\n\nexport const getBlogContent = (payload, successCB, failureCB) => {\n    let url = apiConfig.apps.getBlogContent;\n    let paramObj = {\n        app_id: payload.appId,\n        category_id: payload.categoryId,\n        blog_id: payload.blogId\n    }\n    axios.get(url, paramObj).then((response) => {\n        successCB(response.data)\n    }).catch((error) => {\n        successCB(blogContent1)\n        //failureCB(error)\n    })\n}\n\nexport const relatedArticles = {\n    results: [{\n        id: 1,\n        title: \"What is Lorem ?\",\n        thumbnail_img: Image4,\n        date_posted: \"3 Days Ago\",\n        duration: \"3 min Read\"\n    }, {\n        id: 2,\n        title: \"What is Lorem Ipsumn1?\",\n        thumbnail_img: Image2,\n        date_posted: \"31 Jul\",\n        duration: \"5 min Read\"\n    }, {\n        id: 3,\n        title: \"What is Lorem Ipsum and uses\",\n        thumbnail_img: Image3,\n        date_posted: \"08 Jun\",\n        duration: \"2 min Read\"\n    }, {\n        id: 4,\n        title: \"What is Lorem Ipsum?\",\n        thumbnail_img: Image1,\n        date_posted: \"03 Nov 18\",\n        duration: \"12 min Read\"\n    }]\n}","import { getProductDomain } from \"../Helpers/basics\";\nimport { getCategoryList } from \"../Store/Blog/actionCreator\";\n\nconst base_domain = \"https://cmns.api.moocpedia.com/\";\n\nconst prep_domain = \"https://api.prep.continualengine.com/\";\nconst tv_domain = \"https://api.tablevision.ai/\";\nconst myathina_domain = \"https://api.myathina.com/\";\nconst invicta_domain = \"https://invictaapi.continualengine.com/\";\n\n//localstorage tenant name, update on switch, importing folder path should vary acoordingly\n\nlet product_domain = \"\";\nconst product = localStorage.getItem(\"product\");\nswitch (product) {\n  case \"PREP\":\n    console.log(\"Inside Prep\");\n    product_domain = prep_domain;\n    break;\n  case \"MyAthina\":\n    console.log(\"Inside MA\");\n    product_domain = myathina_domain;\n    break;\n  case \"TableVision\":\n    console.log(\"Inside TV\");\n    product_domain = tv_domain;\n    break;\n  case \"Invicta\":\n    product_domain = invicta_domain;\n    break;\n  default:\n    console.log(\"Inside Def\");\n    product_domain = \"\";\n}\n\nexport const apiConfig = {\n  userAuth: {\n    loginUrl: `${base_domain}accounts/auth/`,\n    tenantLoginUrl: `${product_domain}user/admin-login/`,\n  },\n  getTables: {\n    fetchTablesList: `${product_domain}ceadmin/component/`,\n    fetchTableData: `${product_domain}ceadmin/component/data/`,\n  },\n  tenants: {\n    getTenants: `${product_domain}ceadmin/component/tenants/`,\n  },\n  apps: {\n    getAppsList: `${base_domain}accounts/apps`\n  },\n  blog: {\n    getCategoryList: `${base_domain}ceadmin/blog/categories`,\n    createCategory: `${base_domain}ceadmin/blog/createCategory`,\n    getBlogListData: `${base_domain}ceadmin/blog/categories`,\n    getBlogContent: `${base_domain}ceadmin/blog/categories`\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { FormControl } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { NavLink, withRouter } from \"react-router-dom\";\n//import { connect } from 'react-redux';\nimport { apiConfig } from '../../Configs/apiConfigs';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Logo from '../../Static/logo.png';\n// import { showSnackBar } from '../../store/AlertMessages/actionCreator';\nimport { login } from '../../Store/Login/actionCreator';\nimport { generateJwtToken } from '../../Helpers/basics';\n\n\nexport default function Login(props) {\n    const [displayProgress, setDisplayProgress] = useState(false);\n    const [btnDisabled, setBtnDisabled] = useState(false);\n    const [renderLogin, setRenderLogin] = useState(true);\n    const classes = useStyles();\n\n\n    const validateEmail = email => {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    const doSignIn = (event) => {\n        event.preventDefault();\n        setDisplayProgress(true);\n        setBtnDisabled(true);\n        // const userName = document.getElementById('username').value;\n        // const password = document.getElementById('password').value;\n        // let isValid;\n        // if (userName !== '' && password !== '') {\n        //     isValid = validateEmail(userName);\n        //     if (isValid) {\n        //         let loginCredentials = {}\n        //         loginCredentials.username = userName;\n        //         loginCredentials.password = password;\n        //         login(loginCredentials, successCallBack, failureCallBack)\n        //     } else {\n        //         //props.showSnackBar(\n        //         //     {\n        //         //         state: true,\n        //         //         message: 'Username Not Valid!',\n        //         //         type: 'error'\n        //         //     }\n        //         // )\n        //         setDisplayProgress(false);\n        //         setBtnDisabled(false);\n        //     }\n        // } else {\n        //     // props.showSnackBar(\n        //     //     {\n        //     //         state: true,\n        //     //         message: 'Credentials cannot be Empty!',\n        //     //         type: 'error'\n        //     //     }\n        //     // )\n        //     setDisplayProgress(false);\n        //     setBtnDisabled(false);\n        // }\n        props.history.replace('/apps');\n    }\n\n    const successCallBack = (res) => {\n        // var userToken = generateJwtToken(res.user)\n        // localStorage.setItem('ce_user', userToken);\n        // localStorage.setItem('ce_token', res.token);\n        // setDisplayProgress(false);\n        props.history.replace('/apps');\n    }\n\n    const failureCallBack = () => {\n        setDisplayProgress(false);\n        setBtnDisabled(false);\n    }\n\n    return (\n        <Grid container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\" className={classes.container} spacing={2}>\n            {renderLogin && <Card className={classes.card}\n                variant=\"outlined\">\n                <CardContent>\n                    <img src={Logo} height={100} width={100} />\n                    <br /> <br />\n                    <form className={classes.form} noValidate onSubmit={evnt => { evnt.preventDefault() }} autoComplete=\"off\">\n                        {/* <FormControl fullWidth={true} className={classes.formControll} >\n                            <InputLabel htmlFor=\"userName\">Email address</InputLabel>\n                            <Input id=\"username\" />\n                        </FormControl>\n                        <FormControl fullWidth={true} className={classes.formControll}>\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\n                            <Input id=\"password\" type=\"password\" />\n                        </FormControl> */}\n                        <div style={{\n                            margin: '1rem', color: '#2d94dd', fontSize: '1.5rem'\n                        }}>Continual Engine Admin</div>\n                        <Button\n                            variant=\"contained\"\n                            disabled={btnDisabled}\n                            type=\"submit\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={(event) => { doSignIn(event) }}\n                        >\n                            Proceed  {displayProgress && <CircularProgress className={classes.progressIcon} size={20} />}\n                        </Button>\n                    </form>\n                </CardContent>\n            </Card>}\n        </Grid>\n    )\n}\n\n\n\nconst useStyles = makeStyles({\n    container: {\n        paddingTop: \"100px\"\n    },\n    orText: {\n        fontWeight: 700,\n        backgroundColor: '#fff',\n        paddingLeft: 10,\n        paddingRight: 10,\n        display: 'inline-block'\n    },\n    divider: {\n        marginTop: '-23px'\n    },\n    button: {\n        marginTop: '1rem',\n        backgroundColor: '#4285f4',\n        '&:hover': {\n            backgroundColor: '#4285f4',\n        },\n    },\n    buttonGoogle: {\n        margin: '1rem',\n        //backgroundImage: `url(${GoogleIcon})`,\n        backgroundSize: 'contain',\n        paddingTop: 10,\n        paddingBottom: 10,\n        paddingLeft: 49,\n        backgroundRepeat: 'no-repeat',\n        border: 'none',\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: '#fff',\n        },\n    },\n    progressIcon: {\n        paddingLeft: '0.5rem'\n    },\n    card: {\n        maxWidth: 400,\n        textAlign: \"center\"\n    },\n    form: {\n        flexGrow: 1\n    },\n    alreadyAccount: {\n        paddingTop: 15\n    },\n    buttonWrapper: {\n        marginTop: 15\n    },\n    formControll: {\n        marginBottom: 20,\n    },\n    cardFrame: {\n        display: \"flex\"\n    }\n});\n","const iconColor = \"#2e8eec\";\nconst appBlue = \"#2e8eec\";\nconst adminBlue = '#4285f4';\nconst appGrey = \"#464444\";\nconst lightGrey = \"#f9f9f9\";\nconst appGreen = \"#6ac685\";\nconst banner_darkBlue = \"#1c234a\";\nconst orange = \"#f2903d\";\nconst background_blue = \"#f3f6f7\";\nconst tory_blue = \"#11539f\";\nconst background_lightblue = \"#f3f3f3\";\nconst red = \"#f24e3d\";\nconst white = \"#fff\";\n\n\nexport const style = {\n  containerPaddingTop: {\n    paddingTop: \"2rem\",\n  },\n  logoImg: {\n    width: \"3rem\",\n    cursor: \"pointer\",\n  },\n  root: {\n    display: \"flex\",\n  },\n  iconFrame: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    height: \"100%\",\n  },\n  iconContainer: {\n    height: \"100%\",\n    paddingRight: \"0.5rem\",\n  },\n  icon: {\n    color: iconColor,\n    fontSize: \"1.5rem\",\n    padding: \"1.8rem 0.5rem 0 0\",\n  },\n  faIcon: {\n    color: iconColor,\n    fontSize: \"1.5rem\",\n    padding: \"0 0.5rem 0 0\",\n  },\n  certIcon: {\n    color: iconColor,\n    fontSize: \"2.5rem\",\n    padding: \"0 0.5rem 0 0\",\n  },\n  certIconSmall: {\n    color: iconColor,\n    fontSize: \"1.5rem\",\n    padding: \"0 0.5rem 0 0\",\n  },\n  completedIcon: {\n    color: appGreen,\n    fontSize: \"1.5rem\",\n    padding: \"1.8rem 0.5rem 1rem 0\",\n  },\n  iconTxt: {\n    padding: \"1.2rem 0.5rem 1rem 1rem\",\n    fontSize: \"0.8rem\",\n    color: iconColor,\n  },\n  courseMainBanner: {\n    paddingTop: \"2rem\",\n    maxHeight: \"360px\",\n    width: \"100%\",\n  },\n  fontColour: {\n    _blue: appBlue,\n    _grey: appGrey,\n    _green: appGreen,\n    _darkBlue: banner_darkBlue,\n    _orange: orange,\n    _red: red,\n    _white: white,\n    _adminBlue: adminBlue,\n    _tory_blue: tory_blue\n  },\n  backgroundColor: {\n    _card: lightGrey,\n    _screen: background_blue,\n    _white: \"#FFF\",\n    _adminBlue: adminBlue,\n    _screenLight: background_lightblue,\n  },\n  fontSize: {\n    _heading: \"24px\",\n    _sideHeading: \"20px\",\n    _labels: \"16px\",\n    _description: \"14px\",\n    _smallDesc: \"12px\",\n    _helperText: \"10px\",\n  },\n  iconSize: {\n    _small: \"1rem\",\n    _medium: \"1.5rem\",\n    _large: \"2rem\",\n  },\n  fontWeight: {\n    _heading: \"600\",\n    _sideHeading: \"400\",\n  },\n  button: {\n    _backgroundColor: appBlue,\n    _color: \"#FFF\",\n  },\n  fontFamily: {\n    _appFont: \"Roboto\",\n  },\n};\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport PageHeaderLogo from '../../Static/myAthinaLogo.png';\nimport Avatar from '@material-ui/core/Avatar';\nimport Popover from '@material-ui/core/Popover';\nimport Grid from '@material-ui/core/Grid';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport { style } from '../../Styles/theme';\nimport { Link } from 'react-router-dom';\nimport { getLoggedInStatus } from '../../Helpers/basics'\nimport Logo from '../../Static/logo.png';\n\nexport default function Header(props) {\n    const classes = useStyles();\n    const matches = useMediaQuery('(max-width:600px)');\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                className={classes.appBar}\n            >\n                <div>\n                    {matches === true ?\n                        <div >\n                            <Grid container spacing={2} style={{ backgroundColor: '#f0f8ff' }} >\n                                <Grid item xs={6} sm={6} >\n                                    <img src={Logo} style={{ height: \"40px\", width: \"140px\", marginRight: \"15px\" }} alt=\"client.myathina logo\" />\n                                </Grid>\n                                <Grid item xs={6} sm={6}>\n                                    <div className={classes.sectionDesktop}>\n                                        <div style={{ display: \"flex\" }}>\n                                            <React.Fragment>\n                                                <Avatar style={{ \"alignSelf\": \"end\", backgroundColor: '#205f9d', textTransform: 'uppercase' }} >'US'</Avatar>\n                                                <IconButton aria-label=\"profile and logout\" className={classes.margin} size=\"small\" >\n                                                    <MoreVertIcon style={{ fontSize: \"30px\", \"paddingTop\": \"5px\" }} />\n                                                </IconButton>\n                                            </React.Fragment>\n                                        </div>\n                                    </div>\n                                </Grid>\n                            </Grid>\n                        </div>\n                        :\n                        <Grid container spacing={2}>\n                            <Grid item xs={5} sm={5} md={3} lg={3}>\n                                <div style={{ margin: '0.3rem', textAlign: 'start', display: 'flex' }}>\n                                    <img style={style.logoImg} src={Logo} alt=\"Myathina Logo\" />\n                                    <div className={classes.title}>Continual Engine - Admin</div>\n                                </div>\n                            </Grid>\n                            <Grid item xs={2} sm={2} md={9} lg={9}>\n                                {getLoggedInStatus() && <div className={classes.sectionDesktop}>\n                                    <div style={{ display: \"flex\" }}>\n                                        <React.Fragment>\n                                            <Avatar style={{ \"alignSelf\": \"end\", backgroundColor: '#205f9d', textTransform: 'uppercase' }} >US</Avatar>\n                                            <IconButton aria-label=\"profile and logout\" className={classes.margin} size=\"small\" >\n                                                <MoreVertIcon style={{ fontSize: \"30px\", \"paddingTop\": \"5px\" }} />\n                                            </IconButton>\n                                        </React.Fragment>\n                                    </div>\n                                </div>}\n                            </Grid>\n                        </Grid>\n                    }\n                </div>\n\n\n            </AppBar>\n\n            {/* <Popover\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <List aria-label=\"profile and logout options\">\n                    <ListItem >\n                        <IconButton style={{ borderRadius: \"5px\" }} >\n                            <div style={{ display: 'flex' }}>\n                                <AccountCircleIcon style={{ color: style.fontColour._orange, padding: \"0.2rem 0.2rem 0 0\", fontSize: \"1.2rem\" }} /><div style={{ color: style.fontColour._orange, paddingRight: \"0.2rem\", fontSize: \"1.2rem\" }}>Profile</div>\n                            </div>\n                        </IconButton>\n                    </ListItem>\n                    <ListItem >\n                        <IconButton capture style={{ borderRadius: \"5px\" }} >\n                            <React.Fragment><PowerSettingsNewIcon style={{ color: style.fontColour._orange, padding: \"0.2rem 0.2rem 0 0\", fontSize: \"1.2rem\" }} /> <div style={{ color: style.fontColour._orange, paddingRight: \"0.2rem\", fontSize: \"1.2rem\" }}>Logout</div></React.Fragment>\n                        </IconButton>\n                    </ListItem>\n                </List>\n            </Popover> */}\n        </div>\n    );\n}\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n            //zIndex: 1,\n        }),\n        \"box-shadow\": \"none\",\n        \"backgroundColor\": \"#f0f8ff\",\n        \"color\": \"#3f51b5\",\n        \"border\": \"none\"\n    },\n    root: {\n        display: 'flex',\n\n    },\n    title: {\n        fontSize: '1.5rem',\n        fontWeight: '600',\n        color: style.fontColour._blue,\n        margin: '0.5rem 0 0 0.5rem'\n    },\n\n    sectionDesktop: {\n        float: 'right',\n        marginRight: '0.5rem',\n        marginTop: '0.5rem'\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    avatar: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    popover: {\n        pointerEvents: 'none',\n    },\n    paper: {\n        padding: theme.spacing(1),\n    },\n    list: {\n        marginTop: \"4rem\"\n    },\n    iconButton: {\n        padding: \"8px 12px 12px 8px\"\n    },\n    icon: {\n        color: style.fontColour._green,\n        fontSize: \"1.8rem\"\n    },\n    buttonContainer: {\n        paddingRight: \"1rem\"\n    },\n    button: {\n        marginRight: \"1rem\",\n        backgroundColor: style.button._backgroundColor\n    },\n    link: {\n        color: style.fontColour._orange,\n        textDecoration: \"none\",\n        fontSize: \"1rem\",\n        marginLeft: \"0.2rem\"\n    }\n}));\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button'\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AthinaLogo from '../../Static/myAthinaLogo.png';\nimport PrepLogo from '../../Static/preplogo.svg';\nimport TVlogo from '../../Static/tv_logo.svg';\nimport InvictaLogo from '../../Static/invictalogo.png';\nimport CELogo from '../../Static/ce.png';\nimport Header from '../Header';\nimport { style } from '../../Styles/theme';\n\nexport default function AppList(props) {\n    const classes = useStyles();\n\n    useEffect(() => {\n        localStorage.removeItem('product', '')\n    }, [])\n\n\n    const proceedToLogin = (selProduct) => {\n        localStorage.setItem('product', selProduct);\n        props.history.push(`/tenantlogin?product=${selProduct}`);\n        window.location.reload(false)\n    };\n\n    const blogLogin = () => {\n        props.history.push(`/bloglogin`);\n        window.location.reload(false)\n    }\n\n    return (\n        <React.Fragment>\n            <Header />\n            <div className={classes.appsContainer}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12} sm={12} md={4} lg={4}>\n                        <Card className={classes.blogCard} >\n                            <CardHeader\n                                title={<div className={classes.blogcardTitle}>Continual Engine Blogs</div>}\n                            />\n                            <CardContent>\n                                <img height=\"90px\" width=\"140px\" src={CELogo}></img>\n                            </CardContent>\n                            <CardActions style={{ justifyContent: 'center' }}>\n                                <Button variant=\"contained\" className={classes.blogButton} color=\"primary\" onClick={() => { blogLogin() }}>Manage Blogs</Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={4}>\n                        <Card className={classes.root} >\n                            <CardHeader\n                                avatar={\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                        MA\n                                    </Avatar>\n                                }\n                                title={<div className={classes.cardTitle}>My Athina</div>}\n                            />\n                            <CardContent>\n                                <img height=\"90px\" width=\"240px\" src={AthinaLogo}></img>\n                            </CardContent>\n                            <CardActions style={{ justifyContent: 'center' }}>\n                                <Button variant=\"contained\" className={classes.button} color=\"primary\" onClick={() => { proceedToLogin('MyAthina') }}>Select</Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={4}>\n                        <Card className={classes.root} >\n                            <CardHeader\n                                avatar={\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                        PR\n                                </Avatar>\n                                }\n                                title={<div className={classes.cardTitle}>PREP</div>}\n                            />\n                            <CardContent>\n                                <img height=\"90px\" width=\"240px\" src={PrepLogo}></img>\n                            </CardContent>\n                            <CardActions style={{ justifyContent: 'center' }}>\n                                <Button variant=\"contained\" className={classes.button} color=\"primary\" onClick={() => { proceedToLogin('PREP') }}>Select</Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={4}>\n                        <Card className={classes.root} >\n                            <CardHeader\n                                avatar={\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                        TV\n                                </Avatar>\n                                }\n                                title={<div className={classes.cardTitle}>Table Vision</div>}\n                            />\n                            <CardContent>\n                                <img height=\"90px\" width=\"240px\" src={TVlogo}></img>\n                            </CardContent>\n                            <CardActions style={{ justifyContent: 'center' }}>\n                                <Button variant=\"contained\" className={classes.button} color=\"primary\" onClick={() => { proceedToLogin('TableVision') }}>Select</Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={4} lg={4}>\n                        <Card className={classes.root} >\n                            <CardHeader\n                                avatar={\n                                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                                        IN\n                                </Avatar>\n                                }\n                                title={<div className={classes.cardTitle}>Invicta</div>}\n                            />\n                            <CardContent>\n                                <img height=\"90px\" width=\"240px\" src={InvictaLogo}></img>\n                            </CardContent>\n                            <CardActions style={{ justifyContent: 'center' }}>\n                                <Button variant=\"contained\" className={classes.button} color=\"primary\" onClick={() => { proceedToLogin('Invicta') }}>Select</Button>\n                            </CardActions>\n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        </React.Fragment>\n    );\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n    blogCard: {\n        maxWidth: 345,\n        backgroundColor: \"#6ac685\"\n    },\n    blogcardTitle: {\n        fontSize: '1.2rem',\n        textAlign: 'start',\n        color: style.fontColour._white\n    },\n    blogButton: {\n        marginTop: '1rem',\n        marginBottom: '1rem',\n        color: style.fontColour._adminBlue,\n        backgroundColor: '#fff',\n        '&:hover': {\n            backgroundColor: '#fff',\n            color: style.fontColour._adminBlue\n        },\n    },\n    button: {\n        marginTop: '1rem',\n        marginBottom: '1rem',\n        backgroundColor: style.fontColour._adminBlue,\n        '&:hover': {\n            backgroundColor: style.fontColour._adminBlue,\n        },\n    },\n    cardTitle: {\n        fontSize: '1.2rem',\n        textAlign: 'start',\n        color: style.fontColour._adminBlue\n    },\n    media: {\n        height: \"120px\",\n        width: '400px',\n    },\n    appsContainer: {\n        margin: '5rem 3rem 3rem 3rem'\n\n    },\n    avatar: {\n        backgroundColor: style.fontColour._blue,\n    },\n}));\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Donut\", 452, 25.0, 51, 4.9),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\n  createData(\"Honeycomb\", 408, 3.2, 87, 6.5),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Jelly Bean\", 375, 0.0, 94, 0.0),\n  createData(\"KitKat\", 518, 26.0, 65, 7.0),\n  createData(\"Lollipop\", 392, 0.2, 98, 0.0),\n  createData(\"Marshmallow\", 318, 0, 81, 2.0),\n  createData(\"Nougat\", 360, 19.0, 9, 37.0),\n  createData(\"Oreo\", 437, 18.0, 63, 4.0),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Dessert (100g serving)\",\n  },\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={\"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={row.name}\n                    >\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport AthinaLogo from \"../../Static/myAthinaLogo.png\";\nimport PrepLogo from \"../../Static/preplogo.svg\";\nimport TVlogo from \"../../Static/tv_logo.svg\";\n\n\nexport default function Tenants(props) {\n  const classes = useStyles();\n  const [tenants, setTenants] = useState(props.tenants);\n  const [selectedTenantId, setSelectedTenantId] = useState(\"\");\n\n  const handleChange = (event) => {\n    setSelectedTenantId(event.target.value);\n  };\n\n  const proceedToDashboard = () => {\n    props.history.push(`/${selectedTenantId}/home`);\n  };\n\n  return (\n    <div>\n      <div>Choose Tenant</div>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">\n          Tenant\n          </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={selectedTenantId}\n          onChange={handleChange}\n          label=\"Tenant\"\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {tenants.map((item, index) => {\n            return (\n              <MenuItem key={index} value={item.tenant_id}>{item.name}</MenuItem>\n            )\n          })}\n        </Select>\n      </FormControl>\n      <div className={classes.buttonContainer}>\n        <Button\n          variant=\"outlined\"\n          className={classes.button}\n          color=\"primary\"\n          onClick={() => {\n            proceedToDashboard();\n          }}\n        >\n          Proceed\n          </Button>\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    paddingTop: \"100px\",\n  },\n  buttonContainer: {\n    marginTop: \"1rem\",\n  },\n  button: {\n    marginTop: '1rem',\n    marginBottom: '1rem',\n    backgroundColor: '#4285f4',\n    '&:hover': {\n      backgroundColor: '#4285f4',\n      color: '#fff',\n    },\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  divider: {\n    marginTop: \"-23px\",\n  },\n  progressIcon: {\n    paddingLeft: \"0.5rem\",\n  },\n  card: {\n    maxWidth: 300,\n    textAlign: \"center\",\n  },\n  form: {\n    flexGrow: 1,\n  },\n  formControl: {\n    marginTop: \"1rem\",\n    minWidth: 250,\n  },\n  buttonWrapper: {\n    marginTop: 15,\n  },\n  cardFrame: {\n    display: \"flex\",\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { FormControl } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport Tenants from '../Tenants/tenants';\n// import { connect } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { apiConfig } from '../../Configs/apiConfigs';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Logo from '../../Static/logo.png';\nimport myAthinaLogo from '../../Static/myAthinaLogo.png';\nimport prepLogo from '../../Static/preplogo.svg';\nimport tvLogo from '../../Static/tv_logo.svg';\nimport invictaLogo from '../../Static/invictalogo.png';\nimport { generateJwtToken } from '../../Helpers/basics'\nimport { tenantList } from '../../MockData/tenantInfo'\nimport { doTenantLogin } from '../../Store/Login/actionCreator';\n\nexport default function TenantLogin(props) {\n    const classes = useStyles();\n    const [displayProgress, setDisplayProgress] = useState(false);\n    const [btnDisabled, setBtnDisabled] = useState(false);\n    const [renderLogin, setRenderLogin] = useState(true);\n    const [productImage, setProductImage] = useState();\n    const [tenantsList, setTenantsList] = useState([]);\n    const [openSnack, setOpenSnack] = useState(false);\n    const [snackBarMsg, setSnackBarMsg] = useState('');\n    const posVert = \"top\";\n    const posHori = \"right\";\n\n\n    useEffect(() => {\n        let urlParams = new URLSearchParams(window.location.search);\n        let paramVal = urlParams.get(\"product\");\n        if (paramVal !== undefined && paramVal === \"MyAthina\") {\n            setProductImage(myAthinaLogo);\n        } else if (paramVal !== undefined && paramVal === \"PREP\") {\n            setProductImage(prepLogo);\n        } else if (paramVal !== undefined && paramVal === \"TableVision\") {\n            setProductImage(tvLogo);\n        } else if (paramVal !== undefined && paramVal === \"Invicta\") {\n            setProductImage(invictaLogo);\n        }\n    }, [])\n\n    const validateEmail = email => {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    const handleSnackClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpenSnack(false);\n    };\n\n    const doSignIn = (event) => {\n        event.preventDefault();\n        setDisplayProgress(true);\n        setBtnDisabled(true);\n        const userName = document.getElementById('username').value;\n        const password = document.getElementById('password').value;\n        let isValid;\n        if (userName !== '' && password !== '') {\n            isValid = validateEmail(userName);\n            if (isValid) {\n                let loginCredentials = {}\n                loginCredentials.username = userName;\n                loginCredentials.password = password;\n                doTenantLogin(loginCredentials, successCallBack, failureCallBack)\n            } else {\n                setOpenSnack(true);\n                setSnackBarMsg(\"Username not valid\")\n                setDisplayProgress(false);\n                setBtnDisabled(false);\n            }\n        } else {\n            setOpenSnack(true);\n            setSnackBarMsg(\"Credentials cannot be Empty!\")\n\n            setDisplayProgress(false);\n            setBtnDisabled(false);\n        }\n\n    }\n\n    const successCallBack = (res) => {\n        var userToken = generateJwtToken(res.userDetails)\n        localStorage.setItem('ce_admin_user', userToken);\n        localStorage.setItem('ce_admin_token', res.token);\n        setDisplayProgress(false);\n        setTenantsList(res.tenantInfo.tenants);\n        setRenderLogin(false)\n    }\n\n    const failureCallBack = () => {\n        setOpenSnack(true);\n        setSnackBarMsg(\"Login Failed. Please Check your Credentials!\")\n        setDisplayProgress(false);\n        setBtnDisabled(false);\n    }\n\n    return (\n        <React.Fragment>\n            <Grid container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\" className={classes.container} spacing={2}>\n                <Card className={classes.card}\n                    variant=\"outlined\">\n                    <CardContent>\n                        <img src={productImage} height={90} width={240} />\n                        <br /> <br />\n                        {renderLogin ? <form className={classes.form} noValidate onSubmit={evnt => { evnt.preventDefault() }} autoComplete=\"off\">\n                            <FormControl fullWidth={true} className={classes.formControll} >\n                                <InputLabel htmlFor=\"userName\">UserId</InputLabel>\n                                <Input id=\"username\" />\n                            </FormControl>\n                            <FormControl fullWidth={true} className={classes.formControll}>\n                                <InputLabel htmlFor=\"password\">Password</InputLabel>\n                                <Input id=\"password\" type=\"password\" />\n                            </FormControl>\n                            <Button\n                                variant=\"contained\"\n                                disabled={btnDisabled}\n                                type=\"submit\"\n                                color=\"primary\"\n                                className={classes.button}\n                                onClick={(event) => { doSignIn(event) }}\n                            >\n                                Sign In  {displayProgress && <CircularProgress className={classes.progressIcon} size={20} />}\n                            </Button>\n                        </form> : <Tenants tenants={tenantsList} history={props.history} />}\n                    </CardContent>\n                </Card>\n            </Grid>\n            <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={openSnack} autoHideDuration={6000} onClose={handleSnackClose} message={snackBarMsg}>\n            </Snackbar>\n        </React.Fragment>\n    )\n}\n\n\n\nconst useStyles = makeStyles({\n    container: {\n        paddingTop: \"100px\"\n    },\n    orText: {\n        fontWeight: 700,\n        backgroundColor: '#fff',\n        paddingLeft: 10,\n        paddingRight: 10,\n        display: 'inline-block'\n    },\n    divider: {\n        marginTop: '-23px'\n    },\n    button: {\n        marginTop: '1rem',\n        marginBottom: '1rem',\n        backgroundColor: '#4285f4',\n        '&:hover': {\n            backgroundColor: '#4285f4',\n        },\n    },\n    buttonGoogle: {\n        margin: '1rem',\n        //backgroundImage: `url(${GoogleIcon})`,\n        backgroundSize: 'contain',\n        paddingTop: 10,\n        paddingBottom: 10,\n        paddingLeft: 49,\n        backgroundRepeat: 'no-repeat',\n        border: 'none',\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: '#fff',\n        },\n    },\n    progressIcon: {\n        paddingLeft: '0.5rem'\n    },\n    card: {\n        maxWidth: 300,\n        textAlign: \"center\"\n    },\n    form: {\n        flexGrow: 1\n    },\n    alreadyAccount: {\n        paddingTop: 15\n    },\n    buttonWrapper: {\n        marginTop: 15\n    },\n    formControll: {\n        marginBottom: 20,\n    },\n    cardFrame: {\n        display: \"flex\"\n    }\n});\n","import axios from 'axios';\nimport { apiConfig } from '../../Configs/apiConfigs';\n\n\nexport const login = (payload, successCallBack, failureCallBack) => {\n    const url = `${apiConfig.userAuth.loginUrl}`\n    axios.post(url, payload)\n        .then(function (response) {\n            successCallBack(response.data)\n        })\n        .catch(function (error) {\n            //failureCallBack(error)\n            successCallBack()\n        })\n}\n\nexport const doTenantLogin = (payload, successCallBack, failureCallBack) => {\n    const url = `${apiConfig.userAuth.tenantLoginUrl}`\n    axios.post(url, payload)\n        .then(function (response) {\n            successCallBack(response.data)\n        })\n        .catch(function (error) {\n            failureCallBack(error)\n            //successCallBack()\n        })\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport LinkIcon from '@material-ui/icons/Link';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport Table from \"@material-ui/core/Table\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Header from \"../Header\";\nimport { MA1_table_info } from \"../../MockData/tables\";\nimport { fetchTenantList } from \"../../Store/Tenants/actionCreator\";\nimport { getTablesList, getTableData } from \"../../Store/Data/actionCreator\";\n\nexport default function Tables(props) {\n  const classes = useStyles();\n  const [dense, setDense] = useState(false);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n  const [selectedTable, setSelectedTable] = useState();\n  const [tablesList, setTablesList] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [columnsList, setColumnsList] = useState([]);\n  const [page, setPage] = useState(0);\n  const [offset, setOffset] = useState(0);\n  const [totalRecCount, setTotalRecCount] = useState(0);\n  const [tableCode, setTableCode] = useState();\n  const [displayImage, setDisplayImage] = useState();\n  const [open, setOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(\"\");\n  const [tenantsList, setTenantsList] = useState([]);\n  const [order, setOrder] = useState(\"asc\");\n  const [orderBy, setOrderBy] = useState();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [product, setProduct] = useState();\n  const [loading, setLoading] = useState(false);\n  const [filters, setFilters] = useState([]);\n  const [filterItems, setFilterItems] = useState({});\n  const [selectedFilterItem, setSelectedFilterItem] = useState(\"\");\n  const [selectedColumn, setSelectedColumn] = useState(\"\");\n  const [sortType, setSortType] = useState(\"\")\n\n  const handleSearchChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  const handleClickSearch = (event) => {\n    event.preventDefault();\n    setPage(0);\n    setOffset(0);\n    fetchTableData(tableCode, 0);\n  };\n\n\n\n  const [selectedTenantId, setSelectedTenantId] = useState(\n    props.history.match.params.tenantId\n  );\n\n  // function EnhancedTableHead(props) {\n  //   const {\n  //     classes,\n  //     onSelectAllClick,\n  //     order,\n  //     orderBy,\n  //     numSelected,\n  //     rowCount,\n  //     onRequestSort,\n  //   } = props;\n\n  //   const createSortHandler = (property) => (event) => {\n  //     onRequestSort(event, property);\n  //   };\n\n  //   return (\n  //     <TableHead>\n  //       <TableRow>\n  //         {columnsList.map((headCell) => (\n  //           <TableCell\n  //             key={headCell.id}\n  //             align={headCell.numeric ? \"right\" : \"left\"}\n  //             padding={headCell.disablePadding ? \"none\" : \"default\"}\n  //             sortDirection={orderBy === headCell.id ? order : false}\n  //           >\n  //             <TableSortLabel\n  //               active={orderBy === headCell.id}\n  //               direction={orderBy === headCell.id ? order : \"asc\"}\n  //               onClick={createSortHandler(headCell.id)}\n  //             >\n  //               {headCell.label}\n  //               {orderBy === headCell.id ? (\n  //                 <span className={classes.visuallyHidden}>\n  //                   {order === \"desc\"\n  //                     ? \"sorted descending\"\n  //                     : \"sorted ascending\"}\n  //                 </span>\n  //               ) : null}\n  //             </TableSortLabel>\n  //           </TableCell>\n  //         ))}\n  //       </TableRow>\n  //     </TableHead>\n  //   );\n  // }\n\n  // EnhancedTableHead.propTypes = {\n  //   classes: PropTypes.object.isRequired,\n  //   numSelected: PropTypes.number.isRequired,\n  //   onRequestSort: PropTypes.func.isRequired,\n  //   onSelectAllClick: PropTypes.func.isRequired,\n  //   order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  //   orderBy: PropTypes.string.isRequired,\n  //   rowCount: PropTypes.number.isRequired,\n  // };\n\n  const handleTenantChange = (event) => {\n    setSelectedTenantId(event.target.value);\n    fetchTableList();\n    setSelectedItem(\"\");\n    setTableData([])\n    setColumnsList([]);\n    setLoading(false)\n  };\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n    let l = newPage * rowsPerPage;\n    setOffset(l);\n    fetchTableData(tableCode, l);\n  };\n\n  useEffect(() => {\n    setProduct(localStorage.getItem(\"product\"));\n    fetchTableList();\n    getTenantList();\n  }, []);\n\n  const getTenantList = () => {\n\n    let payload = {\n      product: localStorage.getItem(\"product\"),\n    };\n    fetchTenantList(payload, successTenantsCallBack, failureTenantsCallBack);\n  };\n\n  const successTenantsCallBack = (res) => {\n    setTenantsList(res.results);\n  };\n\n  const failureTenantsCallBack = (error) => { };\n\n  const fetchTableList = () => {\n    let payload = {\n      product: product,\n      tenant_id: selectedTenantId,\n    };\n    getTablesList(payload, successCB, failureCB);\n  };\n\n  const renderTableCell = (cell, row) => {\n    switch (cell.col_type) {\n      case \"file\":\n        return (\n          <TableCell align=\"center\">\n            <a href={row[cell.col_name]} target=\"_blank\">\n              <CloudDownloadIcon className={classes.downloadIcon} />\n            </a>\n          </TableCell>\n        );\n      case \"image\":\n        return (\n          <TableCell align=\"center\">\n            <ImageIcon\n              className={classes.downloadIcon}\n              onClick={() => {\n                displayImgDialog(row[cell.col_name]);\n              }}\n            />\n          </TableCell>\n        );\n      case \"hyperlink\":\n        return (\n          <TableCell align=\"center\">\n            <a href={row[cell.col_name]} target=\"_blank\">\n              <LinkIcon className={classes.downloadIcon} />\n            </a>\n          </TableCell>\n        );\n      default:\n        return <TableCell>{row[cell.col_name]}</TableCell>;\n    }\n  };\n\n  const successCB = (res) => {\n    setTablesList(res.results);\n  };\n\n  const failureCB = (error) => { };\n\n  const handleTableClick = (code) => {\n    setTableCode(code);\n    setPage(0);\n    setOffset(0);\n    fetchTableData(code, 0);\n  };\n\n  const fetchTableData = (code, offsetVal) => {\n    if (code) {\n      let sortBy = {};\n      if (sortType !== \"\" && selectedColumn) {\n        sortBy[\"column\"] = sortType === 'asc' ? selectedColumn : `-${selectedColumn}`\n      }\n      setTableData([]);\n      let payload = {\n        table_id: code,\n        tenant_id: selectedTenantId,\n        offset: offsetVal,\n        search: searchValue,\n        filter: filterItems,\n        sorting: sortBy,\n        limit: 25,\n      };\n      setLoading(true);\n      getTableData(payload, successCallBack, failureCallBack);\n    } else {\n      setTableData([]);\n      setColumnsList([]);\n      setTotalRecCount(0);\n    }\n  };\n\n  const successCallBack = (res) => {\n    setTableData(res.results.data);\n    setLoading(false);\n    setTotalRecCount(res.results.total_count);\n    setColumnsList(res.results.column_list);\n  };\n\n  const failureCallBack = (error) => { };\n\n  const displayImgDialog = (image) => {\n    setDisplayImage(image);\n    setOpen(true);\n    setLoading(false);\n  };\n\n  const handleSelectChange = (event) => {\n    setSelectedItem(event.target.value);\n    let tableObj = tablesList.find((item) => (item.code === event.target.value));\n    setFilters(tableObj && tableObj.filters && tableObj.filters.length > 0 ? tableObj.filters : []);\n    setTableCode(event.target.value);\n    setPage(0);\n    setOffset(0);\n    fetchTableData(event.target.value, 0);\n  };\n\n  const handleFilterChange = (event, item) => {\n\n    setSelectedFilterItem(event.target.value, item)\n    setFilterItems({ ...filterItems, [item]: event.target.value })\n  }\n\n  useEffect(() => {\n    setPage(0);\n    setOffset(0);\n    fetchTableData(tableCode, 0);\n  }, [filterItems])\n\n\n  const handleSortChange = (event) => {\n    setSortType(event.target.value);\n  }\n\n  useEffect(() => {\n    if (sortType) {\n      setPage(0);\n      setOffset(0);\n      fetchTableData(tableCode, 0);\n    }\n  }, [sortType])\n\n  const handleSortingColumnChange = (event) => {\n    setSelectedColumn(event.target.value);\n  };\n\n\n\n  const renderTable = () => {\n    return (\n      <React.Fragment>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow className={classes.thead}>\n                {columnsList.length > 0 &&\n                  columnsList.map((item, index) => (\n                    <TableCell key={index}>{item.label}</TableCell>\n                  ))}\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {tableData.length > 0\n                ? tableData.map((row, index) => (\n                  <TableRow key={index}>\n                    {columnsList.length > 0 &&\n                      columnsList.map((cell, index) => (\n                        <React.Fragment key={index}>\n                          {renderTableCell(cell, row)}\n                        </React.Fragment>\n                      ))}\n                  </TableRow>\n                ))\n                : \"No Records Found\"}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {tableData.length > 0 && (\n          <TablePagination\n            rowsPerPageOptions={[]}\n            component=\"div\"\n            count={totalRecCount}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n          />\n        )}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <div className={classes.appsContainer}>\n      <Header />\n      <Grid container spacing={3}>\n        {product == \"MyAthina\" && (\n          <Grid item xs={12} sm={4} md={3} lg={2}>\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">\n                Tenant\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={selectedTenantId}\n                onChange={handleTenantChange}\n                label=\"Tenant\"\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {tenantsList &&\n                  tenantsList.length > 0 &&\n                  tenantsList.map((item, index) => {\n                    return (\n                      <MenuItem key={index} value={item.tenant_id}>\n                        {item.name}\n                      </MenuItem>\n                    );\n                  })}\n              </Select>\n            </FormControl>\n          </Grid>\n        )}\n        <Grid item xs={12} sm={4} md={3} lg={2}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Tables\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={selectedItem}\n              onChange={handleSelectChange}\n              label=\"Tables\"\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              {tablesList.map((item, index) => {\n                return <MenuItem value={item.code}>{item.table_name}</MenuItem>;\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={4} md={3} lg={4}>\n          <form\n            id=\"main\"\n            tabIndex=\"-1\"\n            className={classes.form}\n            noValidate\n            autoComplete=\"off\"\n            onSubmit={handleClickSearch}\n          >\n            <FormControl style={{ marginTop: \"0.5rem\", width: '100%' }} variant=\"outlined\" >\n              <InputLabel htmlFor=\"outlined-adornment-password\">\n                Search\n            </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                value={searchValue}\n                onChange={handleSearchChange}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickSearch}\n                      edge=\"end\"\n                    >\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={70}\n              />\n            </FormControl>\n          </form>\n        </Grid>\n        {/* <Grid item xs={12} sm={4} md={3} lg={2}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Sort By Column\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={selectedColumn}\n              onChange={handleSortingColumnChange}\n              label=\"Columns\"\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              {columnsList.map((item, index) => {\n                return <MenuItem key={index} value={item.col_name}>{item.label}</MenuItem>;\n              })}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={4} md={3} lg={2}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Sort By\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={sortType}\n              disabled={columnsList.length > 0 ? false : true}\n              onChange={handleSortChange}\n              label=\"Sort By\"\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value=\"asc\">ASC</MenuItem>\n              <MenuItem value=\"desc\">DESC</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid> */}\n      </Grid>\n      <Divider />\n      <Grid container spacing={1}>\n        <Grid item xs={12} sm={12} md={12} lg={12}>\n          <div style={{ display: 'flex' }}>\n            {filters.length > 0 && <div style={{ textAlign: 'initial', paddingTop: '1rem' }}>\n              Filters:\n            </div>}\n            <React.Fragment>\n              {filters.length > 0 ?\n                <Grid container spacing={2}>\n                  {filters.map((item, index) => (\n                    <Grid key={index} item xs={12} sm={4} md={3} lg={2}>\n                      <FormControl className={classes.formControl}>\n                        <InputLabel>\n                          {item.name}\n                        </InputLabel>\n                        <Select\n                          label={item.name}\n                          value={selectedFilterItem}\n                          onChange={(e) => { handleFilterChange(e, item.name) }}\n                        >\n                          <MenuItem value=\"\">\n                            <div className={classes.sortLabel}>None</div>\n                          </MenuItem>\n                          {item.values.map((item, menuIndex) => {\n                            return <MenuItem key={menuIndex} value={item}><div className={classes.sortLabel}>{item}</div></MenuItem>;\n                          })}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                  ))}\n                </Grid> : <div style={{ textAlign: 'initial', padding: '1rem' }}>No filters available for current selection.</div>}\n            </React.Fragment>\n          </div>\n\n\n        </Grid>\n      </Grid>\n      <Divider />\n      <Grid container spacing={1}>\n        {/* <Grid item xs={12} sm={12} md={2} lg={2}>\n          <Paper>\n            {tablesList.length > 0 ?\n              <React.Fragment>\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\n                  {tablesList.map((item, index) => {\n                    return (\n                      <ListItem key={index} className={tableCode === item.code ? classes.activeTablesList : classes.tablesList} button onClick={() => { handleTableClick(item.code) }}>\n                        <ListItemText primary={item.table_name} />\n                      </ListItem>\n                    );\n                  })}\n                </List>\n                <Divider /> </React.Fragment> : <div>No Data to Display</div>}\n          </Paper>\n        </Grid> */}\n        <Grid item xs={12} sm={12} md={12} lg={12}>\n          {loading && (\n            <div style={{ marginTop: \"5rem\" }}>\n              <CircularProgress />\n            </div>\n          )}\n          {tableData.length > 0\n            ? renderTable()\n            : !loading && (\n              <div style={{ marginTop: \"2rem\" }}>No Data to Display</div>\n            )}\n        </Grid>\n      </Grid>\n      <Dialog\n        fullWidth={true}\n        maxWidth=\"sm\"\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Image</DialogTitle>\n        <DialogContent>\n          <img src={displayImage} height=\"320px\" width=\"540px\" />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appsContainer: {\n    marginTop: \"1.5rem\",\n  },\n  downloadIcon: {\n    cursor: \"pointer\",\n  },\n  formControl: {\n    margin: \"10px\",\n    minWidth: 180,\n    width: \"180px\",\n  },\n  thead: {\n    background: \"#ebebeb\",\n  },\n  activeTablesList: {\n    backgroundColor: \"#f0f8fe\",\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  sortLabel: {\n    fontSize: \"12px\"\n  },\n}));\n","import axios from \"axios\";\nimport { apiConfig } from \"../../Configs/apiConfigs\";\nimport { tenantList } from \"../../MockData/tenantInfo\";\n\nexport const fetchTenantList = (payload, successCallBack, failureCallBack) => {\n  const url = `${apiConfig.tenants.getTenants}`;\n  let header = {\n    headers: {\n      Authorization: \"Token \" + localStorage.getItem(\"ce_admin_token\"),\n    },\n  };\n  axios\n    .post(url, payload, header)\n    .then(function (response) {\n      successCallBack(response.data);\n    })\n    .catch(function (error) {\n      failureCallBack(error);\n    });\n};\n","import axios from \"axios\";\nimport { apiConfig } from \"../../Configs/apiConfigs\";\n\nexport const getTablesList = (payload, successCallBack, failureCallBack) => {\n  const url = `${apiConfig.getTables.fetchTablesList}`;\n  let header = {\n    headers: {\n      Authorization: \"Token \" + localStorage.getItem(\"ce_admin_token\"),\n    },\n  };\n  axios\n    .post(url, payload, header)\n    .then(function (response) {\n      successCallBack(response.data);\n    })\n    .catch(function (error) {\n      failureCallBack(error);\n      //successCallBack()\n    });\n};\n\nexport const getTableData = (payload, successCallBack, failureCallBack) => {\n  const url = `${apiConfig.getTables.fetchTableData}`;\n  let header = {\n    headers: {\n      Authorization: \"Token \" + localStorage.getItem(\"ce_admin_token\"),\n    },\n  };\n  axios\n    .post(url, payload, header)\n    .then(function (response) {\n      successCallBack(response.data);\n    })\n    .catch(function (error) {\n      failureCallBack(error);\n      //successCallBack()\n    });\n};\n","import React from \"react\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport List from \"@material-ui/core/List\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport StarBorder from \"@material-ui/icons/StarBorder\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TableList from \"../Tables\";\nimport Header from \"../Header\";\n\nimport { findRenderedComponentWithType } from \"react-dom/test-utils\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    borderRight: \"1px solid #e2e1e1\",\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction Home(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(true);\n  const [selComponent, setSelectedComponent] = React.useState(\"TableList\");\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  const renderComponent = () => {\n    if (selComponent === \"Dashboard\") {\n      return null;\n    } else if (selComponent === \"TableList\") {\n      return <TableList history={props} />;\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      <Grid container spacing={2} style={{ marginTop: \"2rem\" }}>\n        <Grid item xs={12} sm={12} md={3} lg={2}>\n          <List\n            component=\"nav\"\n            aria-labelledby=\"nested-list-subheader\"\n            className={classes.root}\n          >\n\n\n            <ListItem\n              button\n              onClick={() => {\n                setSelectedComponent(\"Dashboard\");\n              }}\n            >\n              <ListItemIcon>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Dashboard\" />\n            </ListItem>\n            <ListItem\n              button\n              onClick={() => {\n                setSelectedComponent(\"TableList\");\n              }}\n            >\n              <ListItemIcon>\n                <TableChartIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Tables\" />\n            </ListItem>\n            <ListItem\n              button\n              onClick={() => {\n                setSelectedComponent(\"Analytics\");\n              }}\n            >\n              <ListItemIcon>\n                <EqualizerIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Analytics\" />\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item xs={12} sm={12} md={9} lg={10}>\n          {renderComponent()}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { FormControl } from '@material-ui/core';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { NavLink, withRouter } from \"react-router-dom\";\n//import { connect } from 'react-redux';\nimport { apiConfig } from '../../Configs/apiConfigs';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CELogo from '../../Static/ce.png';\n// import { showSnackBar } from '../../store/AlertMessages/actionCreator';\nimport { login } from '../../Store/Login/actionCreator';\nimport { generateJwtToken } from '../../Helpers/basics';\n\n\nexport default function Login(props) {\n    const [displayProgress, setDisplayProgress] = useState(false);\n    const [btnDisabled, setBtnDisabled] = useState(false);\n    const [renderLogin, setRenderLogin] = useState(true);\n    const classes = useStyles();\n\n\n    const validateEmail = email => {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    const doSignIn = (event) => {\n        event.preventDefault();\n        setDisplayProgress(true);\n        setBtnDisabled(true);\n        // const userName = document.getElementById('username').value;\n        // const password = document.getElementById('password').value;\n        // let isValid;\n        // if (userName !== '' && password !== '') {\n        //     isValid = validateEmail(userName);\n        //     if (isValid) {\n        //         let loginCredentials = {}\n        //         loginCredentials.username = userName;\n        //         loginCredentials.password = password;\n        //         login(loginCredentials, successCallBack, failureCallBack)\n        //     } else {\n        //         //props.showSnackBar(\n        //         //     {\n        //         //         state: true,\n        //         //         message: 'Username Not Valid!',\n        //         //         type: 'error'\n        //         //     }\n        //         // )\n        //         setDisplayProgress(false);\n        //         setBtnDisabled(false);\n        //     }\n        // } else {\n        //     // props.showSnackBar(\n        //     //     {\n        //     //         state: true,\n        //     //         message: 'Credentials cannot be Empty!',\n        //     //         type: 'error'\n        //     //     }\n        //     // )\n        //     setDisplayProgress(false);\n        //     setBtnDisabled(false);\n        // }\n        props.history.replace('/blog');\n    }\n\n    const successCallBack = (res) => {\n        var userToken = generateJwtToken(res.user)\n        setDisplayProgress(false);\n        props.history.replace('/apps');\n    }\n\n    const failureCallBack = () => {\n        setDisplayProgress(false);\n        setBtnDisabled(false);\n    }\n\n    return (\n        <Grid container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\" className={classes.container} spacing={2}>\n            {renderLogin && <Card className={classes.card}\n                variant=\"outlined\">\n                <CardContent>\n                    <img src={CELogo} height={100} width={140} />\n                    <br />\n                    <div style={{\n                        margin: '1rem', color: '#2d94dd', fontSize: '1.5rem'\n                    }}>Blogs Login </div>\n                    <form className={classes.form} noValidate onSubmit={evnt => { evnt.preventDefault() }} autoComplete=\"off\">\n                        <FormControl fullWidth={true} className={classes.formControll} >\n                            <InputLabel htmlFor=\"userName\">Email address</InputLabel>\n                            <Input id=\"username\" />\n                        </FormControl>\n                        <FormControl fullWidth={true} className={classes.formControll}>\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\n                            <Input id=\"password\" type=\"password\" />\n                        </FormControl>\n\n                        <Button\n                            variant=\"contained\"\n                            disabled={btnDisabled}\n                            type=\"submit\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={(event) => { doSignIn(event) }}\n                        >\n                            Login  {displayProgress && <CircularProgress className={classes.progressIcon} size={20} />}\n                        </Button>\n                    </form>\n                </CardContent>\n            </Card>}\n        </Grid>\n    )\n}\n\n\n\nconst useStyles = makeStyles({\n    container: {\n        paddingTop: \"100px\"\n    },\n    orText: {\n        fontWeight: 700,\n        backgroundColor: '#fff',\n        paddingLeft: 10,\n        paddingRight: 10,\n        display: 'inline-block'\n    },\n    divider: {\n        marginTop: '-23px'\n    },\n    button: {\n        marginTop: '1rem',\n        backgroundColor: '#4285f4',\n        '&:hover': {\n            backgroundColor: '#4285f4',\n        },\n    },\n    buttonGoogle: {\n        margin: '1rem',\n        //backgroundImage: `url(${GoogleIcon})`,\n        backgroundSize: 'contain',\n        paddingTop: 10,\n        paddingBottom: 10,\n        paddingLeft: 49,\n        backgroundRepeat: 'no-repeat',\n        border: 'none',\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: '#fff',\n        },\n    },\n    progressIcon: {\n        paddingLeft: '0.5rem'\n    },\n    card: {\n        maxWidth: 320,\n        textAlign: \"center\"\n    },\n    form: {\n        flexGrow: 1\n    },\n    alreadyAccount: {\n        paddingTop: 15\n    },\n    buttonWrapper: {\n        marginTop: 15\n    },\n    formControll: {\n        marginBottom: 20,\n    },\n    cardFrame: {\n        display: \"flex\"\n    }\n});\n","import axios from 'axios';\nimport { apiConfig } from '../../Configs/apiConfigs';\n\nexport class UploadAdapter {\n    constructor(loader) {\n        this.loader = loader\n    }\n\n    async upload() {\n        return this.loader.file.then((file) => {\n            const data = new FormData()\n            data.append(\"file\", file)\n            const genericError = `Couldn't upload file: ${file.name}.`\n            return axios({\n                data,\n                method: \"POST\",\n                url: apiConfig.getTables.fetchTableData,\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                },\n                onUploadProgress: (progressEvent) => {\n                    this.loader.uploadTotal = progressEvent.total\n                    this.loader.uploaded = progressEvent.loaded\n                    const uploadPercentage = parseInt(\n                        Math.round((progressEvent.loaded / progressEvent.total) * 100)\n                    )\n                },\n            })\n                .then(({ data }) => ({ default: \"https://myathina-blog.s3.amazonaws.com/banner/findCourse.png\" }))\n                //     .catch(({ error }) => Promise.reject(error?.message ?? genericError))\n                .catch(({ error }) => ({ default: \"https://myathina-blog.s3.amazonaws.com/banner/findCourse.png\" }))\n        })\n    }\n\n    abort() {\n        return Promise.reject()\n    }\n}\n\nexport function uploadAdapterPlugin(editor) {\n    editor.plugins.get(\"FileRepository\").createUploadAdapter = (loader) =>\n        new UploadAdapter(loader)\n}","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport DecoupledEditor from \"@ckeditor/ckeditor5-build-decoupled-document\";\nimport \"./custom.css\";\nimport { style } from \"../../Styles/theme\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { uploadAdapterPlugin } from './uploadAdapter';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction TextEditor(props) {\n    const classes = useStyles();\n    const helperText = props.helperText\n    const [openDialog, setOpenDialog] = useState(false);\n    const [defaultData, setDefaultData] = useState(props.description);\n    const [previewDialog, setPreviewDialog] = useState(false);\n\n    useEffect(() => {\n        let data = props.description ? props.description : \"\";\n        setDefaultData(data);\n    }, [props]);\n\n    const onChangeData = (data) => {\n        console.log(\"Data\", data)\n        setDefaultData(data);\n    };\n    const previewContent = () => {\n        setPreviewDialog(true);\n    };\n\n    const handleDialogClose = () => {\n        setPreviewDialog(false);\n    };\n\n    const changeTextEditorView = () => {\n        setOpenDialog(true);\n    };\n    const closeTextEditorView = () => {\n        setOpenDialog(false);\n    };\n    const textEditor = () => {\n        return (\n            <CKEditor\n                editor={DecoupledEditor}\n                data={defaultData}\n                onInit={(editor) => {\n                    editor.ui.getEditableElement().parentElement.insertBefore(editor.ui.view.toolbar.element, editor.ui.getEditableElement());\n                    uploadAdapterPlugin(editor)\n                }}\n                onChange={(event, editor) => {\n                    const data = editor.getData();\n                    onChangeData(data);\n                    //props.onChangeEditorContent(data);\n                }}\n                config={{\n                    placeholder: helperText ? helperText : \"Add content here...\",\n                    fontColor: {\n                        colors: [\n                            {\n                                color: \"rgb(0, 0, 0)\",\n                                label: \"Black\",\n                            },\n                            {\n                                color: \"rgb(77, 77, 77)\",\n                                label: \"Dim grey\",\n                            },\n                            {\n                                color: \"rgb(153, 153, 153)\",\n                                label: \"Grey\",\n                            },\n                            {\n                                color: \"rgb(230, 230, 230)\",\n                                label: \"Light grey\",\n                            },\n                            {\n                                color: \"rgb(255, 255, 255)\",\n                                label: \"White\",\n                                hasBorder: true,\n                            },\n                            {\n                                color: \"rgb(255, 0, 0)\",\n                                label: \"Red\",\n                            },\n                            {\n                                color: \"rgb(255, 102, 0)\",\n                                label: \"Orange\",\n                            },\n                            {\n                                color: \"rgb(255, 255, 0)\",\n                                label: \"Yellow\",\n                            },\n                            {\n                                color: \"rgb(102, 255, 51)\",\n                                label: \"Light green\",\n                            },\n                            {\n                                color: \"rgb(0, 153, 0)\",\n                                label: \"Green\",\n                            },\n                            {\n                                color: \"rgb(0, 0, 255)\",\n                                label: \"Blue\",\n                            },\n                        ],\n                    },\n                    fontBackgroundColor: {\n                        colors: [\n                            {\n                                color: \"rgb(0, 0, 0)\",\n                                label: \"Black\",\n                            },\n                            {\n                                color: \"rgb(77, 77, 77)\",\n                                label: \"Dim grey\",\n                            },\n                            {\n                                color: \"rgb(153, 153, 153)\",\n                                label: \"Grey\",\n                            },\n                            {\n                                color: \"rgb(230, 230, 230)\",\n                                label: \"Light grey\",\n                            },\n                            {\n                                color: \"rgb(255, 255, 255)\",\n                                label: \"White\",\n                                hasBorder: true,\n                            },\n                            {\n                                color: \"rgb(255, 0, 0)\",\n                                label: \"Red\",\n                            },\n                            {\n                                color: \"rgb(255, 102, 0)\",\n                                label: \"Orange\",\n                            },\n                            {\n                                color: \"rgb(255, 255, 0)\",\n                                label: \"Yellow\",\n                            },\n                            {\n                                color: \"rgb(102, 255, 51)\",\n                                label: \"Light green\",\n                            },\n                            {\n                                color: \"rgb(0, 153, 0)\",\n                                label: \"Green\",\n                            },\n                            {\n                                color: \"rgb(0, 0, 255)\",\n                                label: \"Blue\",\n                            },\n                        ],\n                    },\n                    toolbar: [\n                        \"heading\",\n                        \"|\",\n                        \"bold\",\n                        \"italic\",\n                        \"blockQuote\",\n                        \"underline\",\n                        \"link\",\n                        \"fontSize\",\n                        \"fontColor\",\n                        \"fontBackgroundColor\",\n                        \"numberedList\",\n                        \"bulletedList\",\n                        \"imageUpload\",\n                        \"imageStyle:full\",\n                        \"imageStyle:side\",\n                        \"mediaEmbed\",\n                        \"|\",\n                        \"undo\",\n                        \"redo\",\n                    ],\n                }}\n            ></CKEditor>\n        );\n    };\n    return (\n        <div>\n            <React.Fragment>\n                <Dialog id=\"popupEditor\" fullScreen open={openDialog} onClose={closeTextEditorView} TransitionComponent={Transition}>\n                    <AppBar className={classes.appBar}>\n                        <Toolbar>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                Description\n                            </Typography>\n                            <IconButton edge=\"start\" className={classes.iconWrapper} onClick={closeTextEditorView} aria-label=\"close\">\n                                <CloseIcon />\n                            </IconButton>\n                        </Toolbar>\n                    </AppBar>\n                    <div>{textEditor()}</div>\n                </Dialog>\n            </React.Fragment>\n            {textEditor()}\n            <div className={classes.tooltipCntr}>\n                <IconButton onClick={previewContent}>\n                    <VisibilityIcon className={classes.icon} />\n                    <div className={classes.tooltip}>Preview</div>\n                </IconButton>\n            </div>\n            <div className={classes.tooltipCntr}>\n                <IconButton onClick={changeTextEditorView}>\n                    <InfoIcon className={classes.icon} />\n                    <div className={classes.tooltip}>Expand Editor</div>\n                </IconButton>\n            </div>\n            <Dialog fullWidth={true} maxWidth=\"lg\" open={previewDialog} onClose={handleDialogClose} aria-labelledby=\"max-width-dialog-title\">\n                <DialogTitle id=\"max-width-dialog-title\">Assignment Description</DialogTitle>\n                <Divider />\n                <DialogContent>\n                    {defaultData && defaultData.length > 0 ? (\n                        <div className={classes.previewDesc} dangerouslySetInnerHTML={{ __html: defaultData }} />\n                    ) : (\n                            <div> Please add some content to preview. </div>\n                        )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleDialogClose} color=\"primary\">\n                        Close\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: \"relative\",\n        height: \"42px\",\n        backgroundColor: \"#F5F5F5\",\n        marginBottom: \"10px\",\n    },\n    icon: {\n        fontSize: 14,\n        paddingTop: \"0.1rem\",\n        padding: \"0 0.2rem 0 0\",\n        color: style.fontColour._tory_blue,\n    },\n    tooltipCntr: {\n        float: \"right\",\n        display: \"flex\",\n        padding: \"0 0.2rem 0 0\",\n    },\n    tooltip: {\n        cursor: \"pointer\",\n        textDecoration: \"underline\",\n        color: style.fontColour._darkBlue,\n        fontSize: style.fontSize._smallDesc,\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n        marginTop: \"-24px\",\n        color: \"black\",\n    },\n    iconWrapper: {\n        marginTop: \"-24px\",\n    },\n    buttonWrapper: {\n        float: \"right\",\n    },\n}));\n\nexport default TextEditor;","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport Input from \"@material-ui/core/Input\";\n//import TextEditorClassic from '../Shared/TextEditorClassic';\nimport TextEditor from '../Shared/TextEditor';\nimport Header from '../../Components/Header';\nimport { getBlogContent } from '../../Store/Blog/actionCreator';\nimport { connect } from 'react-redux';\n\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        marginTop: '6rem'\n    },\n    title: {\n        width: '100%'\n    },\n    detailsWrapper: {\n        padding: '1rem'\n    },\n    uploadBtn: {\n        marginTop: '0.5rem',\n        color: '#fff',\n        backgroundColor: '#2e8eec',\n        '&:hover': {\n            backgroundColor: '#2e8eec',\n        }\n    },\n    uploadCtr: {\n        textAlign: 'initial'\n    },\n    formControl: {\n        width: '100%'\n    },\n    addBtn: {\n        marginTop: '0.5rem',\n        backgroundColor: '#2e8eec',\n        '&:hover': {\n            backgroundColor: '#2e8eec',\n        }\n    },\n    chip: {\n        color: '#2e8eec',\n        border: '1px solid #2e8eec',\n        margin: '0.5rem'\n    },\n    chipCtr: {\n        display: 'flex',\n        textAlign: 'initial',\n        margin: '0.5rem'\n    },\n    divider: {\n        margin: '1rem 0 1rem 0',\n        fontSize: '5px'\n    },\n    uploadFileName: {\n        textAlign: 'initial',\n        marginTop: '1rem'\n    },\n    button: {\n\n    }\n}))\n\n\nfunction CreateBlog(props) {\n    const classes = useStyles();\n    const [category, setCategory] = useState('');\n    const [apps, setApps] = useState(props.appsList && props.appsList || []);\n    const [title, setTitle] = useState('');\n    const [urlSlug, setUrlSlug] = useState();\n    const [duration, setDuration] = useState();\n    const [shortDesc, setShortDesc] = useState();\n    const [thumbnailImg, setThumbnailImg] = useState();\n    const [thumbnailFileName, setThumbnailFileName] = useState('');\n    const [authorImg, setAuthorImg] = useState();\n    const [authorFileName, setAuthorFileName] = useState('');\n    const [blogContent, setBlogContent] = useState();\n    const [author, setAuthor] = useState();\n    const [keywordTxt, setKeywordTxt] = useState();\n    const [keywords, setKeywords] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [app, setApp] = useState(0);\n    const [ogImg, setOgImg] = useState();\n    const [ogFileName, setOgFileName] = useState('');\n    //Meta Content Object\n    const [metaContent, setMetaContent] = useState({\n        \"meta-title\": '',\n        \"meta-desc\": '',\n        \"meta-keyword\": '',\n        \"meta-author\": '',\n        \"meta-robot\": '',\n        \"meta-copyright\": ''\n    })\n\n    //OG SMO Object\n    const [OGContent, setOGContent] = useState({\n        \"og-title\": '',\n        \"og-url\": '',\n        \"og-desc\": '',\n        \"og-keywords\": ''\n    })\n\n    useEffect(() => {\n        let urlParams = new URLSearchParams(window.location.search);\n        let paramVal = urlParams.get(\"blog_id\");\n        if (paramVal) {\n            getBlogContent(paramVal, successCB, failureCB);\n        } else {\n            setLoading(false)\n        }\n    }, [])\n\n    const onFileToUploadClick = (imgType) => {\n        document.getElementById(imgType).click();\n    };\n\n    const successCB = (res) => {\n        setTitle(res.title);\n        setAuthor(res.author_name);\n        setLoading(false)\n    }\n\n    const failureCB = (err) => {\n\n    }\n\n    const handleChange = (event) => {\n        setCategory(event.target.value);\n    };\n    const handleAppChange = (event) => {\n        setApp(event.target.value);\n    };\n\n    const handleTitleChange = (event) => {\n        setTitle(event.target.value)\n    }\n\n    const handleUrlSlugChange = (event) => {\n        setUrlSlug(event.target.value)\n    }\n\n    const handleDurationChange = (event) => {\n        setDuration(event.target.value)\n    }\n\n    const handleAuthorChange = (event) => {\n        setAuthor(event.target.value)\n    }\n\n    const onThumbnailChangeHandler = (event) => {\n        if (\n            event.target.files.length > 0 &&\n            (event.target.files[0].type === \"image/png\" || event.target.files[0].type === \"image/jpg\" || event.target.files[0].type === \"image/jpeg\")\n        ) {\n            setThumbnailFileName(event.target.files[0].name);\n            let reader = new FileReader();\n            reader.onloadend = () => {\n                setThumbnailImg(reader.result);\n            };\n            reader.readAsDataURL(event.target.files[0]);\n        } else {\n            // props.showSnackBar({\n            //     state: true,\n            //     message: \"Please Upload a Valid png/jpg/jpeg file!\",\n            //     type: \"error\",\n            // });\n        }\n        event.target.value = '';\n    }\n\n    const onAuthorImgChangeHandler = (event) => {\n        if (\n            event.target.files.length > 0 &&\n            (event.target.files[0].type === \"image/png\" || event.target.files[0].type === \"image/jpg\" || event.target.files[0].type === \"image/jpeg\")\n        ) {\n            setAuthorFileName(event.target.files[0].name);\n            let reader = new FileReader();\n            reader.onloadend = () => {\n                setAuthorImg(reader.result);\n            };\n            reader.readAsDataURL(event.target.files[0]);\n        } else {\n            // props.showSnackBar({\n            //     state: true,\n            //     message: \"Please Upload a Valid png/jpg/jpeg file!\",\n            //     type: \"error\",\n            // });\n        }\n        event.target.value = '';\n    }\n\n    const onOGImgChangeHandler = (event) => {\n        if (\n            event.target.files.length > 0 &&\n            (event.target.files[0].type === \"image/png\" || event.target.files[0].type === \"image/jpg\" || event.target.files[0].type === \"image/jpeg\")\n        ) {\n            setOgFileName(event.target.files[0].name);\n            let reader = new FileReader();\n            reader.onloadend = () => {\n                setOgImg(reader.result);\n            };\n            reader.readAsDataURL(event.target.files[0]);\n        } else {\n            // props.showSnackBar({\n            //     state: true,\n            //     message: \"Please Upload a Valid png/jpg/jpeg file!\",\n            //     type: \"error\",\n            // });\n        }\n        event.target.value = '';\n    }\n\n    const handleKeywordTxtChange = (event) => {\n        setKeywordTxt(event.target.value);\n    }\n\n    const handleChipDelete = (chipToDelete) => () => {\n        setKeywords((keywords) => keywords.filter((chip) => chip !== chipToDelete));\n    };\n\n    const addKeyword = () => {\n        let arr = [...keywords, keywordTxt]\n        setKeywords(arr)\n        setKeywordTxt('');\n    }\n\n    const handleMetaContentChange = (field, event) => {\n        setMetaContent({ ...metaContent, [field]: event.target.value })\n    }\n\n    const handleOGContentChange = (field, event) => {\n        setOGContent({ ...OGContent, [field]: event.target.value })\n    }\n\n    return (\n        <div>\n            <Header />\n            <div className={classes.content}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={12} md={12} lg={2}>\n\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={8}>\n                        <Paper elevation={2}>\n                            <Grid container spacing={1} className={classes.detailsWrapper}>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                                        <InputLabel id=\"demo-simple-select-outlined-label\">Apps</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-outlined-label\"\n                                            id=\"demo-simple-select-outlined\"\n                                            value={app}\n                                            onChange={handleAppChange}\n                                            label=\"Apps\"\n                                        >\n                                            {apps.length > 0 && apps.map((item, index) => (\n                                                <MenuItem key={index} value={item.id}>{item.app_name}</MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                                        <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-outlined-label\"\n                                            id=\"demo-simple-select-outlined\"\n                                            value={category}\n                                            onChange={handleChange}\n                                            label=\"Category\"\n                                        >\n                                            <MenuItem value={1}>Programming</MenuItem>\n                                            <MenuItem value={2}>Design</MenuItem>\n                                            <MenuItem value={3}>Dev-Ops</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                                <Grid item xs={12} sm={12} md={12} lg={12}>\n                                    <TextField className={classes.title} variant='outlined' value={title} onChange={handleTitleChange} label=\"Blog Title\">\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <Grid container spacing={2}>\n                                        <Grid item xs={12} sm={6} md={4} lg={4}>\n                                            <div className={classes.uploadCtr}>\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"default\"\n                                                    className={classes.uploadBtn}\n                                                    startIcon={<CloudUploadIcon />}\n                                                    onClick={() => {\n                                                        onFileToUploadClick(\"thumbnailImage\");\n                                                    }}\n                                                >\n                                                    Thumbnail\n                                                </Button>\n                                            </div>\n                                            <Input accept=\"image/*\" capture type=\"file\" style={{ display: \"none\" }} id=\"thumbnailImage\" onChange={onThumbnailChangeHandler} />\n                                        </Grid>\n                                        <Grid item xs={12} sm={6} md={8} lg={8}>\n                                            <div className={classes.uploadFileName}>{thumbnailFileName}</div>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <TextField className={classes.title} onChange={handleUrlSlugChange} variant='outlined' label=\"URL Slug\">\n                                    </TextField>\n                                </Grid>\n\n                                <Grid item xs={12} sm={6} md={2} lg={2}>\n                                    <TextField className={classes.title} onChange={handleDurationChange} variant='outlined' label=\"Duration(Mins)\">\n                                    </TextField>\n                                </Grid>\n\n                                <Grid item xs={12} sm={6} md={4} lg={4}>\n                                    <TextField className={classes.title} onChange={handleAuthorChange} variant='outlined' label=\"Author\">\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={3} lg={3}>\n                                    <div className={classes.uploadCtr}>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"default\"\n                                            className={classes.uploadBtn}\n                                            startIcon={<CloudUploadIcon />}\n                                            onClick={() => {\n                                                onFileToUploadClick(\"authorImage\");\n                                            }}\n                                        >\n                                            Author Img\n                                        </Button>\n                                        <Input accept=\"image/*\" capture type=\"file\" style={{ display: \"none\" }} id=\"authorImage\" onChange={onAuthorImgChangeHandler} />\n                                    </div>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={3} lg={3}>\n                                    <div className={classes.uploadFileName}>{authorFileName}</div>\n                                </Grid>\n\n                                <Grid item xs={12} sm={12} md={12} lg={12}>\n                                    <Grid container spacing={2}>\n                                        <Grid item xs={12} sm={9} md={9} lg={9}>\n                                            <TextField className={classes.title} variant='outlined' value={keywordTxt} onChange={handleKeywordTxtChange} label=\"Keywords\" >\n\n                                            </TextField>\n                                        </Grid>\n                                        <Grid item xs={12} sm={9} md={9} lg={3}>\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={() => { addKeyword() }}\n                                                className={classes.addBtn}\n                                            >\n                                                Add\n                                     </Button>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12} sm={12} md={12} lg={12}>\n                                        <div className={classes.chipCtr}>\n                                            {keywords.length > 0 && keywords.map((item, index) => (\n                                                <Chip\n                                                    variant=\"outlined\"\n                                                    label={item}\n                                                    onDelete={handleChipDelete(item)}\n                                                    className={classes.chip}\n                                                />\n                                            ))}\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid item xs={12} sm={12} md={12} lg={12}>\n                                    <TextEditor />\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <TextField className={classes.title} variant='outlined' onChange={(e) => { handleMetaContentChange('meta-title', e) }} value={metaContent[\"meta-title\"]} label=\"meta-title\">\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <TextField className={classes.title} variant='outlined' onChange={(e) => { handleMetaContentChange('meta-desc', e) }} value={metaContent[\"meta-desc\"]} label=\"meta-description\">\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <TextField className={classes.title} variant='outlined' onChange={(e) => { handleMetaContentChange('meta-keyword', e) }} value={metaContent[\"meta-keyword\"]} label=\"meta-keyword\">\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <TextField className={classes.title} variant='outlined' onChange={(e) => { handleMetaContentChange('meta-author', e) }} value={metaContent[\"meta-author\"]} label=\"meta-author\">\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <TextField className={classes.title} variant='outlined' onChange={(e) => { handleMetaContentChange('meta-robot', e) }} value={metaContent[\"meta-robot\"]} label=\"meta-robot\">\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <TextField className={classes.title} variant='outlined' onChange={(e) => { handleMetaContentChange('meta-copyright', e) }} value={metaContent[\"meta-copyright\"]} label=\"meta-copyright\">\n                                    </TextField>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <TextField className={classes.title} variant='outlined' onChange={(e) => { handleOGContentChange('og-title', e) }} value={OGContent[\"og-title\"]} label=\"og-title\">\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <TextField className={classes.title} variant='outlined' onChange={(e) => { handleOGContentChange('og-url', e) }} value={OGContent[\"og-url\"]} label=\"og-url\">\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <TextField className={classes.title} variant='outlined' onChange={(e) => { handleOGContentChange('og-desc', e) }} value={OGContent[\"og-desc\"]} label=\"og-description\">\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <TextField className={classes.title} variant='outlined' onChange={(e) => { handleOGContentChange('og-keywords', e) }} value={OGContent[\"og-keywords\"]} label=\"og-keyword\">\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <Grid container spacing={2}>\n                                        <Grid item xs={12} sm={6} md={4} lg={4}>\n                                            <div className={classes.uploadCtr}>\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"default\"\n                                                    className={classes.uploadBtn}\n                                                    startIcon={<CloudUploadIcon />}\n                                                    onClick={() => {\n                                                        onFileToUploadClick(\"ogImage\");\n                                                    }}\n                                                >\n                                                    OG Image\n                                        </Button>\n                                                <Input accept=\"image/*\" capture type=\"file\" style={{ display: \"none\" }} id=\"ogImage\" onChange={onOGImgChangeHandler} />\n                                            </div>\n                                        </Grid>\n                                        <Grid item xs={12} sm={6} md={8} lg={8}>\n                                            <div className={classes.uploadFileName}>{ogFileName}</div>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid container spacing={2}>\n                                <Grid item xs={12} sm={12} md={12} lg={12}>\n                                    <Button variant=\"contained\" color=\"primary\" className={classes.uploadBtn}>\n                                        Submit\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={12} lg={2}>\n\n                    </Grid>\n\n\n                </Grid>\n\n            </div>\n        </div >\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        appsList: state.lists.appsList,\n        categoryList: state.lists.categoryList\n    };\n}\n\nexport default connect(mapStateToProps)(CreateBlog);\n","import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport AddIcon from '@material-ui/icons/Add';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CardActions from '@material-ui/core/CardActions';\nimport Divider from '@material-ui/core/Divider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { blogListData, categoryListData, getAppsList, getCategoryList, postCategoryData, resetCreateCategory } from '../../Store/Blog/actionCreator'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '0.5rem',\n\n    },\n    categoryCtr: {\n        marginRight: '1rem',\n        display: 'flex',\n        padding: '1rem',\n        justifyContent: 'space-between'\n    },\n    catName: {\n        color: '#82827f',\n        fontSize: \"1rem\",\n    },\n    editIconCtr: {\n        fontSize: '0.8rem'\n    },\n    editIcon: {\n        fontSize: '1rem'\n    },\n    icnBtn: {\n        borderRadius: '5px',\n        padding: '5px',\n        textAlign: 'end',\n        marginRight: '0.5rem'\n    },\n    desc: {\n        color: \"#999\",\n        fontSize: \"0.8rem\"\n    },\n    date: {\n        fontSize: '0.7rem',\n        color: '#999'\n    },\n    category: {\n        fontSize: '0.7rem',\n        color: '#999',\n        marginLeft: '0.5rem',\n        textTransform: 'uppercase'\n    },\n    title: {\n        textAlign: 'initial',\n        color: \"#000\",\n        fontSize: \"1rem\",\n        fontWeight: 500,\n        lineHeight: 1.5,\n        textDecoration: 'none',\n        marginTop: \"0.5rem\",\n        cursor: 'pointer',\n        '&hover:': {\n            color: '#28ecee'\n        }\n    },\n    card: {\n        maxHeight: '400px',\n        height: '365px'\n    },\n    itemDesc: {\n        color: \"#000\",\n        fontSize: \"0.9rem\",\n        margin: \"0.5rem 0 0 0\",\n        textAlign: 'justify',\n        lineHeight: 1.5\n    },\n    media: {\n        height: 140,\n        margin: '1rem',\n        cursor: 'pointer'\n    },\n\n    infoCtr:\n    {\n        display: 'flex',\n        //marginLeft: '1rem'\n        textAlign: 'initial'\n    },\n    itemDate: {\n        fontSize: '0.8rem',\n        color: '#999'\n    },\n    btn: {\n        backgroundColor: '#62d894',\n        '&:hover': {\n            backgroundColor: '#62d894',\n        }\n    },\n    catButton: {\n        backgroundColor: '#d9d9d9',\n        margin: '0.5rem',\n        padding: '0.5rem',\n        color: '#000',\n        minWidth: 'fit-content',\n        fontSize: '1rem',\n        textAlign: 'center',\n        borderRadius: '5px',\n        textDecoration: 'none',\n        '&:hover': {\n            background: 'linear-gradient(to right, #2e5f9b, #2196F3)',\n            color: '#fff',\n            borderRadius: '5px',\n        }\n    },\n    imgTxt: {\n        bottom: '5px',\n        //opacity: '0.9',\n        position: 'absolute',\n        fontSize: '2rem',\n        color: '#fff',\n        //background: 'linear-gradient(to right, #11998e, #38ef7d)',\n        background: 'linear-gradient(to right, #2e5f9b, #2196F3)'\n    },\n    cardActions: {\n        justifyContent: 'center',\n        padding: '0.5rem'\n    },\n    formControl: {\n        width: '80%',\n        margin: '1rem'\n    },\n    leftPaper: {\n        marginTop: '0.5rem',\n    },\n    button: {\n        marginTop: '1rem',\n        width: '80%'\n    },\n    catTitle: {\n        width: '80%',\n        margin: '1rem'\n    },\n    selCatName: {\n        margin: '1rem'\n    }\n}));\n\nfunction BlogList(props) {\n    const classes = useStyles();\n    const [appsList, setAppsList] = useState(props.appsList && props.appsList || [])\n    const [blogList, setBlogList] = useState(blogListData.results || []);\n    const [app, setApp] = useState(1);\n    const [catList, setCatList] = useState([]);\n    const [catName, setCatName] = useState('')\n    const [catSelApp, setCatSelApp] = useState(1);\n    const [selectedCatTitle, setSelectedCatTitle] = useState('');\n    const [selectedCat, setSelectedCat] = useState(1);\n    const [dialogOpen, setDialogOpen] = useState(false);\n    const [appName, setAppName] = useState('PREP');\n    const [catEditFlag, setCatEditFlag] = useState(false);\n    const [createCatLoading, setCreateCatLoading] = useState(false);\n\n    const editBlogContent = () => {\n        props.history.push('/createBlog?blog_id=123')\n    }\n\n    const handleCategoryChange = (e) => {\n        setCatName(e.target.value)\n    }\n\n    const handleCatSelection = (item) => {\n        setSelectedCatTitle(item.categoryTitle);\n    }\n\n    useEffect(() => {\n        props.getAppsList();\n        props.getCategoryList(1);\n    }, [])\n\n    useEffect(() => {\n        if (props.postCategoryAPIStatus) {\n            setCreateCatLoading(false)\n            setDialogOpen(false)\n            setCatName('');\n        }\n    }, [props.postCategoryAPIStatus])\n\n    useEffect(() => {\n        if (props.categoryList.length > 0) {\n            let categoryObj = props.categoryList.find((item) => (item.id === 1));\n            setCatList(categoryObj.categories);\n            console.log(\"test\", categoryObj);\n            setSelectedCat(categoryObj.categories[0].id)\n            setSelectedCatTitle(categoryObj.categories[0].categoryTitle)\n        }\n    }, [props.categoryList])\n\n\n    const handleDialogOpen = (type) => {\n        if (type === 'create') {\n            setCatEditFlag(false);\n            setDialogOpen(true);\n        } else if (type === 'edit') {\n            setDialogOpen(true);\n            setCatEditFlag(true);\n        }\n\n    };\n\n    const handleCreateCategory = () => {\n        props.resetCreateCategory();\n        let payload = {\n            id: catList.length + 1,\n            appId: catSelApp,\n            categoryTitle: catName,\n            slug: 'new-category'\n        };\n        setCreateCatLoading(true);\n        props.postCategoryData(payload);\n    }\n\n    const handleDialogClose = () => {\n        setDialogOpen(false);\n    };\n\n    const handleCatAppChange = (event) => {\n        setCatSelApp(event.target.value);\n    }\n\n    const handleChange = (event) => {\n        setApp(event.target.value);\n        console.log(\"sds\", event.target.value);\n        let appName = event.target.value === 1 ? 'PREP' : event.target.value === 2 ? 'MyAthina' : 'TableVision';\n        setAppName(appName);\n        if (props.categoryList.length > 0) {\n            let categoryObj = props.categoryList.find((item) => (item.id === event.target.value));\n            console.log(\"sds\", categoryObj);\n            setCatList(categoryObj.categories);\n        }\n    };\n\n    const renderBlogCard = (item) => {\n        return (\n            <Card className={classes.card}>\n                <CardActionArea>\n                    <CardMedia\n                        component=\"div\"\n                        className={classes.media}\n                        image={item.thumbnail_img}\n                        title={item.title}\n                        alt={item.title}\n                    />\n                    <CardContent className={classes.cardContent}>\n                        <div className={classes.infoCtr}>\n                            <Grid container spacing={1}>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <div className={classes.itemDate}> {item.date_posted} </div>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={6} lg={6}>\n                                    <div className={classes.itemDate}> {item.duration} </div>\n                                </Grid>\n                            </Grid>\n                        </div>\n                        <div className={classes.title}>\n                            {item.title}\n                        </div>\n                        <div className={classes.itemDesc}>\n                            {item.desc && item.desc.length > 70 ? item.desc.substring(0, 70) + '...' : item.desc}\n                        </div>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions disableSpacing className={classes.cardActions}>\n                    <Button color=\"primary\" variant='outlined' style={{ marginRight: '0.5rem' }}>\n                        Publish\n                    </Button>\n                    <Button color=\"primary\" variant='outlined' onClick={editBlogContent}>\n                        Edit Blog\n                    </Button>\n                </CardActions>\n\n            </Card >\n        )\n    }\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={12} md={2} lg={2}>\n                    <Paper elevation={3} className={classes.leftPaper}>\n                        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => { props.history.push('/createblog') }}>Create Blog</Button>\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-outlined-label\">App</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-outlined-label\"\n                                id=\"demo-simple-select-outlined\"\n                                value={app}\n                                onChange={handleChange}\n                                label=\"Age\"\n                            >\n                                {appsList.length > 0 && appsList.map((item, index) => (\n                                    <MenuItem key={index} value={item.id}>{item.app_name}</MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n                    </Paper>\n                    <Paper elevation={3} className={classes.leftPaper}>\n                        <List component=\"nav\" aria-label=\"blog categories\">\n                            {catList && catList.length > 0 && catList.map((item, index) => {\n                                return (<React.Fragment key={index}>\n                                    <div className={classes.listRoot}>\n                                        <ListItem button onClick={() => handleCatSelection(item)} key={index}>\n                                            <ListItemText primary={\n                                                <div className={classes.catName}>\n                                                    {item.categoryTitle}\n                                                </div>\n                                            } />\n                                            <ListItemSecondaryAction>\n                                                <IconButton edge=\"end\" aria-label=\"view\">\n                                                    <KeyboardArrowRightIcon />\n                                                </IconButton>\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                    </div>\n                                    <Divider />\n                                </React.Fragment>)\n                            }\n                            )}\n                        </List>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={12} md={10} lg={10}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={12} md={12} lg={12}>\n                            <Paper elevation={2} className={classes.categoryCtr}>\n                                <div className={classes.catName}>\n                                    Category -&nbsp;{selectedCatTitle}\n                                </div>\n                                <div className={classes.editIconCtr}>\n                                    <Tooltip title=\"Add Category\">\n                                        <IconButton className={classes.icnBtn} onClick={() => { handleDialogOpen('create') }}>\n                                            <AddIcon className={classes.editIcon} />\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip title=\"Edit Category Details\">\n                                        <IconButton className={classes.icnBtn} onClick={() => { handleDialogOpen('edit') }}>\n                                            <EditIcon className={classes.editIcon} />\n                                        </IconButton>\n                                    </Tooltip>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                    <Grid container spacing={2}>\n                        {blogList.length > 0 && blogList.map((item, index) => {\n                            return (\n                                <Grid key={index} item xs={12} sm={12} md={3} lg={3}>\n                                    {renderBlogCard(item)}\n                                </Grid>)\n                        })}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Dialog\n                fullWidth={true}\n                maxWidth=\"xs\"\n                open={dialogOpen}\n                onClose={handleDialogClose}\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\"> {catEditFlag ? \"Update Category Info\" : \"Create New Category\"}</DialogTitle>\n                <DialogContent>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={12} md={12} lg={12}>\n                            {catEditFlag ?\n                                <React.Fragment>\n                                    <div className={classes.selCatName}>{appName}</div>\n                                    <TextField className={classes.catTitle} variant='outlined' value={catName} onChange={handleCategoryChange} label=\"Category Title\">\n                                    </TextField>\n                                </React.Fragment>\n                                : <React.Fragment>\n                                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                                        <InputLabel id=\"demo-simple-select-outlined-label\">App</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-outlined-label\"\n                                            id=\"demo-simple-select-outlined\"\n                                            value={catSelApp}\n                                            onChange={handleCatAppChange}\n                                            label=\"App\"\n                                        >\n                                            {appsList.length > 0 && appsList.map((item, index) => (\n                                                <MenuItem key={index} value={item.id}>{item.app_name}</MenuItem>\n                                            ))}\n                                        </Select>\n                                    </FormControl>\n                                    <TextField className={classes.catTitle} variant='outlined' value={catName} onChange={handleCategoryChange} label=\"Category Title\">\n                                    </TextField>\n                                </React.Fragment>}\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n                <DialogActions>\n                    {catEditFlag ?\n                        <Button color=\"primary\" variant='outlined'>\n                            Update\n                    </Button>\n                        : <Button onClick={() => { handleCreateCategory() }} disabled={createCatLoading} color=\"primary\" variant='outlined'>\n                            Submit\n                            </Button>}\n                    <Button onClick={handleDialogClose} color=\"primary\" variant='outlined'>\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div >)\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    getAppsList: bindActionCreators(getAppsList, dispatch),\n    getCategoryList: bindActionCreators(getCategoryList, dispatch),\n    postCategoryData: bindActionCreators(postCategoryData, dispatch),\n    resetCreateCategory: bindActionCreators(resetCreateCategory, dispatch)\n})\n\nconst mapStateToProps = (state) => {\n    return {\n        appsList: state.lists.appsList,\n        categoryList: state.lists.categoryList,\n        appsAPIStatus: state.lists.appsAPIStatus,\n        categoryAPIStatus: state.lists.categoryAPIStatus,\n        postCategoryAPIStatus: state.lists.postCategoryAPIStatus\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlogList);\n\n","import React from 'react';\nimport Header from '../Header';\nimport CreateBlog from './createNew';\nimport BlogList from './blogList';\n\nfunction Blogs(props) {\n    return (\n        <React.Fragment>\n            <Header />\n            <div style={{ marginTop: '5rem' }}>\n                <BlogList history={props.history} />\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Blogs;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Card from \"@material-ui/core/Card\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Header from '../Header'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: '6rem'\n    },\n    title: {\n        width: '100%'\n    },\n    detailsWrapper: {\n        padding: '1rem'\n    },\n    uploadBtn: {\n        margin: '1rem'\n    },\n    uploadCtr: {\n        textAlign: 'initial'\n    },\n    formControl: {\n        width: '100%'\n    },\n    addBtn: {\n        marginTop: '0.5rem'\n    },\n    chipCtr: {\n        display: 'flex',\n        justifyContent: 'center',\n        margin: '0.5rem'\n    },\n    divider: {\n        margin: '1rem 0 1rem 0',\n        fontSize: '5px'\n    },\n    uploadImg: {\n        display: 'flex'\n    },\n    uploadTxt: {\n        marginTop: '1.5rem'\n    }\n}))\n\nfunction CategoryDetails(props) {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <Header />\n            <div className={classes.root}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={12} md={2} lg={2}>\n\n                    </Grid>\n                    <Grid item xs={12} xm={12} md={8} lg={8}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\n                                <TextField className={classes.title} variant='outlined' label=\"Category Title\">\n                                </TextField>\n                            </Grid>\n\n                            <Grid item xs={12} sm={12} md={6} lg={6}>\n                                <div className={classes.uploadImg}>\n                                    <div className={classes.uploadTxt}>Upload Primary Banner Image</div>\n                                    <div className={classes.uploadCtr}>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"default\"\n                                            className={classes.uploadBtn}\n                                            startIcon={<CloudUploadIcon />}\n                                        >\n                                            Upload\n                                        </Button>\n                                    </div>\n                                </div>\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\n                                <TextField className={classes.title} variant='outlined' label=\"Primary Banner Content 1\">\n                                </TextField>\n                            </Grid>\n                            {/* <Grid item xs={12} sm={12} md={6} lg={6}>\n                                <div className={classes.uploadImg}>\n                                    <div className={classes.uploadTxt}>Upload Secondary Banner Image 1</div>\n                                    <div className={classes.uploadCtr}>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"default\"\n                                            className={classes.uploadBtn}\n                                            startIcon={<CloudUploadIcon />}\n                                        >\n                                            Upload\n                            </Button>\n                                    </div>\n                                </div>\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\n                                <TextField className={classes.title} variant='outlined' label=\"Secondary Banner Content 2\">\n                                </TextField>\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={6} lg={6}>\n                                <div className={classes.uploadImg}>\n                                    <div className={classes.uploadTxt}>Upload Secondary Banner Image 2</div>\n                                    <div className={classes.uploadCtr}>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"default\"\n                                            className={classes.uploadBtn}\n                                            startIcon={<CloudUploadIcon />}\n                                        >\n                                            Upload\n                            </Button>\n                                    </div>\n                                </div>\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\n                                <TextField className={classes.title} variant='outlined' label=\"Secondary Banner Content 1\">\n                                </TextField>\n                            </Grid> */}\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\n                                <Button variant=\"contained\" color=\"primary\">Submit</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} sm={12} md={2} lg={2}>\n\n                    </Grid>\n                </Grid>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default CategoryDetails;","import React, { Component, useEffect } from \"react\";\nimport { PrivateRoute, BlogPrivateRoute } from '../../router';\nimport Login from \"../UserAuth/login\";\nimport AppList from \"../Apps\";\nimport Try from \"./try\";\nimport TenantLogin from \"../UserAuth/tenantLogin\";\nimport Tables from \"../Tables\";\nimport Home from \"../Home\";\nimport BlogLogin from \"../UserAuth/blogLogin\";\nimport Blog from \"../Blog\";\nimport BlogCreate from '../Blog/createNew';\nimport CatDetails from '../Blog/catDetails';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction Layout(props) {\n  return (\n    <Router basename=\"/ce-admin\">\n      <Switch>\n        <Route exact={true} path=\"/\" component={Login} />\n        < Route path=\"/bloglogin\" history={props.history} component={BlogLogin} />\n        <Route path=\"/createblog\" history={props.history} component={BlogCreate} />\n        <Route path=\"/apps\" history={props.history} component={AppList} />\n        <Route path=\"/categorydet\" history={props.history} component={CatDetails} />\n        <PrivateRoute\n          path=\"/tenantlogin\"\n          history={props.history}\n          component={TenantLogin}\n        />\n        <Route path=\"/blog\" history={props.history} component={Blog} />\n        {/* <BlogPrivateRoute\n          path=\"/blog\"\n          history={props.history}\n          component={Blog}\n        /> */}\n        <PrivateRoute\n          path=\"/:tenantId/tables\"\n          history={props.history}\n          component={Tables}\n        />\n        <PrivateRoute\n          path=\"/:tenantId/home\"\n          history={props.history}\n          component={Home}\n        />\n        <Route path=\"/try\" history={props.history} component={Try} />\n      </Switch >\n    </Router >\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport './App.css';\nimport Layout from '../src/Components/Layout';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport { createBrowserHistory } from 'history';\n\nfunction App(props) {\n  return (\n    <Router history={createBrowserHistory()}>\n      <div className=\"App\">\n        <Layout />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    appsList: [],\n    categoryList: [],\n    appsAPIStatus: false,\n    categoryAPIStatus: false,\n    postCategoryAPIStatus: false\n}\n\n\nexport const listData = (state = initState, action) => {\n    switch (action.type) {\n        case 'FETCH_APPS_LIST':\n            return {\n                ...state,\n                appsList: action.payload,\n                appsAPIStatus: true,\n                categoryAPIStatus: false,\n                postCategoryAPIStatus: false,\n\n            }\n        case 'FETCH_CATEGORY_LIST':\n            return {\n                ...state,\n                categoryList: action.payload,\n                appsAPIStatus: false,\n                categoryAPIStatus: true,\n                postCategoryAPIStatus: false,\n            }\n        case 'CREATE_CATEGORY_DATA':\n            return {\n                ...state,\n                categoryList: action.payload,\n                appsAPIStatus: false,\n                categoryAPIStatus: false,\n                postCategoryAPIStatus: true,\n            }\n        case 'RESET_CREATE_CATEGORY':\n            return {\n                ...state, postCategoryAPIStatus: false,\n            }\n        default:\n            return initState\n    }\n}\n\n\n\n","import { combineReducers } from 'redux';\nimport { listData } from './Blog/reducer';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitellist: ['lists']\n}\n\nconst rootReducer = combineReducers({\n    lists: listData\n});\n\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware, compose } from \"redux\";\nimport combineReducers from \"./Store/rootReducer\";\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nconst middlewares = [logger, thunk];\n\nexport const store = createStore(combineReducers, applyMiddleware(...middlewares))\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/4.ddde1273.png\";","module.exports = __webpack_public_path__ + \"static/media/myAthinaLogo.ad6924b9.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.1733e4e0.png\";","module.exports = __webpack_public_path__ + \"static/media/2.d8ae3d97.png\";","module.exports = __webpack_public_path__ + \"static/media/preplogo.62c5b7bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/tv_logo.3eb614c6.svg\";"],"sourceRoot":""}